import { ElementRef, OnChanges, OnDestroy, SimpleChanges } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { CdkOverlayOrigin } from "@angular/cdk/overlay";
import { MatFormField } from "@angular/material/form-field";
import { NgxMatTimepickerComponent } from "../components/ngx-mat-timepicker/ngx-mat-timepicker.component";
import { NgxMatTimepickerFormatType } from "../models/ngx-mat-timepicker-format.type";
import { NgxMatTimepickerLocaleService } from "../services/ngx-mat-timepicker-locale.service";
import { DateTime } from "ts-luxon";
import * as i0 from "@angular/core";
export declare class NgxMatTimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {
    private _elementRef;
    private _timepickerLocaleSrv;
    private _matFormField;
    get element(): HTMLElement;
    get format(): NgxMatTimepickerFormatType;
    set format(value: number);
    get max(): string | DateTime;
    set max(value: string | DateTime);
    get min(): string | DateTime;
    set min(value: string | DateTime);
    set timepicker(picker: NgxMatTimepickerComponent);
    get value(): string;
    set value(value: string);
    private set _defaultTime(value);
    private get _locale();
    cdkOverlayOrigin: CdkOverlayOrigin;
    disableClick: boolean;
    disabled: boolean;
    private _format;
    private _max;
    private _min;
    private _previousFormat;
    private _subsCtrl$;
    private _timepicker;
    private _value;
    constructor(_elementRef: ElementRef, _timepickerLocaleSrv: NgxMatTimepickerLocaleService, _matFormField: MatFormField);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onClick(event: MouseEvent): void;
    onTouched: () => void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    updateValue(e: Event): void;
    writeValue(value: string): void;
    private _onChange;
    private _registerTimepicker;
    private _unregisterTimepicker;
    private _updateInputValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxMatTimepickerDirective, [null, null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgxMatTimepickerDirective, "[ngxMatTimepicker]", never, { "format": { "alias": "format"; "required": false; }; "max": { "alias": "max"; "required": false; }; "min": { "alias": "min"; "required": false; }; "timepicker": { "alias": "ngxMatTimepicker"; "required": false; }; "value": { "alias": "value"; "required": false; }; "disableClick": { "alias": "disableClick"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, never, true, never>;
}
