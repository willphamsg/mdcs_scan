import { OnDestroy, OnInit } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { NgxMatTimepickerEventService } from "../services/ngx-mat-timepicker-event.service";
import { NgxMatTimepickerLocaleService } from "../services/ngx-mat-timepicker-locale.service";
import { NgxMatTimepickerService } from "../services/ngx-mat-timepicker.service";
import { NgxMatTimepickerUnits } from "../models/ngx-mat-timepicker-units.enum";
import { NgxMatTimepickerClockFace } from "../models/ngx-mat-timepicker-clock-face.interface";
import { NgxMatTimepickerPeriods } from "../models/ngx-mat-timepicker-periods.enum";
import { NgxMatTimepickerConfig } from "../models/ngx-mat-timepicker-config.interface";
import { Observable, Subject } from "rxjs";
import * as i0 from "@angular/core";
export declare class NgxMatTimepickerBaseDirective implements OnInit, OnDestroy {
    protected _timepickerSrv: NgxMatTimepickerService;
    protected _eventSrv: NgxMatTimepickerEventService;
    protected _timepickerLocaleSrv: NgxMatTimepickerLocaleService;
    data: NgxMatTimepickerConfig;
    set color(newValue: ThemePalette);
    get color(): ThemePalette;
    get defaultTime(): string;
    set defaultTime(time: string);
    private get _locale();
    activeTimeUnit: NgxMatTimepickerUnits;
    selectedHour: Observable<NgxMatTimepickerClockFace>;
    selectedMinute: Observable<NgxMatTimepickerClockFace>;
    selectedPeriod: Observable<NgxMatTimepickerPeriods>;
    timeUnit: typeof NgxMatTimepickerUnits;
    protected _color: ThemePalette;
    protected _defaultTime: string;
    protected _subsCtrl$: Subject<void>;
    constructor(_timepickerSrv: NgxMatTimepickerService, _eventSrv: NgxMatTimepickerEventService, _timepickerLocaleSrv: NgxMatTimepickerLocaleService, data: NgxMatTimepickerConfig);
    changePeriod(period: NgxMatTimepickerPeriods): void;
    changeTimeUnit(unit: NgxMatTimepickerUnits): void;
    close(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    onHourChange(hour: NgxMatTimepickerClockFace): void;
    onHourSelected(hour: number): void;
    onKeydown(e: any): void;
    onMinuteChange(minute: NgxMatTimepickerClockFace): void;
    setTime(): void;
    protected _defineTime(): void;
    protected _onTimeChange(): void;
    protected _setDefaultTime(time: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxMatTimepickerBaseDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgxMatTimepickerBaseDirective, "[ngxMatTimepickerBase]", never, { "color": { "alias": "color"; "required": false; }; "defaultTime": { "alias": "defaultTime"; "required": false; }; }, {}, never, never, true, never>;
}
