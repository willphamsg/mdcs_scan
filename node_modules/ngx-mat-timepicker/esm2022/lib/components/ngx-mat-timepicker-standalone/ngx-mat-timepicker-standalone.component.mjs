import { Component, Inject, ViewEncapsulation } from "@angular/core";
import { NgClass, NgSwitch, NgSwitchCase, NgIf, NgTemplateOutlet, AsyncPipe } from "@angular/common";
import { MatToolbarModule } from "@angular/material/toolbar";
import { A11yModule } from "@angular/cdk/a11y";
import { MatButtonModule } from "@angular/material/button";
import { NgxMatTimepickerBaseDirective } from "../../directives/ngx-mat-timepicker-base.directive";
import { NGX_MAT_TIMEPICKER_CONFIG } from "../../tokens/ngx-mat-timepicker-config.token";
import { NgxMatTimepickerMinutesFaceComponent } from "../ngx-mat-timepicker-minutes-face/ngx-mat-timepicker-minutes-face.component";
import { NgxMatTimepicker12HoursFaceComponent } from "../ngx-mat-timepicker-12-hours-face/ngx-mat-timepicker-12-hours-face.component";
import { NgxMatTimepicker24HoursFaceComponent } from "../ngx-mat-timepicker-24-hours-face/ngx-mat-timepicker-24-hours-face.component";
import { NgxMatTimepickerDialComponent } from "../ngx-mat-timepicker-dial/ngx-mat-timepicker-dial.component";
import { NgxMatTimepickerContentComponent } from "../ngx-mat-timepicker-content/ngx-mat-timepicker-content.component";
import * as i0 from "@angular/core";
import * as i1 from "../../services/ngx-mat-timepicker.service";
import * as i2 from "../../services/ngx-mat-timepicker-event.service";
import * as i3 from "../../services/ngx-mat-timepicker-locale.service";
import * as i4 from "@angular/material/button";
import * as i5 from "@angular/cdk/a11y";
import * as i6 from "@angular/material/toolbar";
export class NgxMatTimepickerStandaloneComponent extends NgxMatTimepickerBaseDirective {
    constructor(data, timepickerSrv, eventSrv, timepickerLocaleSrv) {
        super(timepickerSrv, eventSrv, timepickerLocaleSrv, data);
        this.data = data;
    }
    close() {
        this.data.timepickerBaseRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepickerStandaloneComponent, deps: [{ token: NGX_MAT_TIMEPICKER_CONFIG }, { token: i1.NgxMatTimepickerService }, { token: i2.NgxMatTimepickerEventService }, { token: i3.NgxMatTimepickerLocaleService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.5", type: NgxMatTimepickerStandaloneComponent, isStandalone: true, selector: "ngx-mat-timepicker-standalone", host: { properties: { "class.mat-app-background": "true" } }, usesInheritance: true, ngImport: i0, template: "<ng-template #cancelBtnDefault>\r\n\t<button mat-button\r\n\t\t\t[color]=\"color\">CANCEL\r\n\t</button>\r\n</ng-template>\r\n<ng-template #confirmBtnDefault>\r\n\t<button mat-button\r\n\t\t\t[color]=\"color\">OK\r\n\t</button>\r\n</ng-template>\r\n<div cdkTrapFocus>\r\n\t<ngx-mat-timepicker-content [appendToInput]=\"data.appendToInput\"\r\n\t\t\t\t\t\t\t\t[inputElement]=\"data.inputElement\">\r\n\t\t<div class=\"timepicker\"\r\n\t\t\t [ngClass]=\"data.timepickerClass\">\r\n\t\t\t<mat-toolbar [color]=\"color\"\r\n\t\t\t\t\t\t [class.is-editable]=\"data.enableKeyboardInput\"\r\n\t\t\t\t\t\t class=\"timepicker-header\">\r\n\t\t\t\t<ngx-mat-timepicker-dial [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t [hour]=\"(selectedHour | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t [minute]=\"(selectedMinute | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t\t [activeTimeUnit]=\"activeTimeUnit\"\r\n\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t [isEditable]=\"data.enableKeyboardInput\"\r\n\t\t\t\t\t\t\t\t\t\t [editableHintTmpl]=\"data.editableHintTmpl\"\r\n\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\r\n\t\t\t\t\t\t\t\t\t\t [hoursOnly]=\"data.hoursOnly\"\r\n\t\t\t\t\t\t\t\t\t\t (periodChanged)=\"changePeriod($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (timeUnitChanged)=\"changeTimeUnit($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (hourChanged)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (minuteChanged)=\"onMinuteChange($event)\">\r\n\t\t\t\t</ngx-mat-timepicker-dial>\r\n\t\t\t</mat-toolbar>\r\n\t\t\t<div class=\"timepicker__main-content\">\r\n\t\t\t\t<div class=\"timepicker__body\"\r\n\t\t\t\t\t [ngSwitch]=\"activeTimeUnit\">\r\n\t\t\t\t\t<div *ngSwitchCase=\"timeUnit.HOUR\">\r\n\t\t\t\t\t\t<ngx-mat-timepicker-24-hours-face *ngIf=\"data.format === 24;else ampmHours\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourChange)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [selectedHour]=\"selectedHour | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-24-hours-face>\r\n\t\t\t\t\t\t<ng-template #ampmHours>\r\n\t\t\t\t\t\t\t<ngx-mat-timepicker-12-hours-face\r\n\t\t\t\t\t\t\t\t\t[color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t(hourChange)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t[selectedHour]=\"selectedHour | async\"\r\n\t\t\t\t\t\t\t\t\t[period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t[minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t[maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t(hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-12-hours-face>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ngx-mat-timepicker-minutes-face *ngSwitchCase=\"timeUnit.MINUTE\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [dottedMinutesInGap]=\"data.dottedMinutesInGap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedMinute]=\"selectedMinute | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedHour]=\"(selectedHour | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t (minuteChange)=\"onMinuteChange($event)\"></ngx-mat-timepicker-minutes-face>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ngx-mat-timepicker-content>\r\n\r\n\t<div class=\"ngx-mat-timepicker-standalone-actions\">\r\n\t\t<div (click)=\"close()\">\r\n\t\t\t<ng-container\r\n\t\t\t\t\t*ngTemplateOutlet=\"data.cancelBtnTmpl ? data.cancelBtnTmpl : cancelBtnDefault\"></ng-container>\r\n\t\t</div>\r\n\t\t<div (click)=\"setTime()\">\r\n\t\t\t<ng-container\r\n\t\t\t\t\t*ngTemplateOutlet=\"data.confirmBtnTmpl ? data.confirmBtnTmpl : confirmBtnDefault\"></ng-container>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n", styles: ["ngx-mat-timepicker-standalone{display:block;border-radius:4px;box-shadow:0 0 5px 2px #00000040;overflow:hidden}ngx-mat-timepicker-standalone ngx-mat-timepicker-content{display:block}ngx-mat-timepicker-standalone ngx-mat-timepicker-content mat-toolbar.timepicker-header{display:flex;justify-content:center;align-items:center}ngx-mat-timepicker-standalone ngx-mat-timepicker-content mat-toolbar.timepicker-header.is-editable{height:auto}ngx-mat-timepicker-standalone ngx-mat-timepicker-content .clock-face{margin:16px}ngx-mat-timepicker-standalone .ngx-mat-timepicker-standalone-actions{display:flex;flex-direction:row;justify-content:flex-end;padding:0 16px 16px}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i4.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "ngmodule", type: A11yModule }, { kind: "directive", type: i5.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { kind: "component", type: NgxMatTimepickerContentComponent, selector: "ngx-mat-timepicker-content", inputs: ["appendToInput", "inputElement"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "ngmodule", type: MatToolbarModule }, { kind: "component", type: i6.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "component", type: NgxMatTimepickerDialComponent, selector: "ngx-mat-timepicker-dial", inputs: ["activeTimeUnit", "color", "editableHintTmpl", "format", "hour", "hoursOnly", "isEditable", "maxTime", "minTime", "minute", "minutesGap", "period"], outputs: ["hourChanged", "minuteChanged", "periodChanged", "timeUnitChanged"] }, { kind: "directive", type: NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: NgxMatTimepicker24HoursFaceComponent, selector: "ngx-mat-timepicker-24-hours-face" }, { kind: "component", type: NgxMatTimepicker12HoursFaceComponent, selector: "ngx-mat-timepicker-12-hours-face", inputs: ["period"] }, { kind: "component", type: NgxMatTimepickerMinutesFaceComponent, selector: "ngx-mat-timepicker-minutes-face", inputs: ["color", "dottedMinutesInGap", "format", "maxTime", "minTime", "minutesGap", "period", "selectedHour", "selectedMinute"], outputs: ["minuteChange"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: AsyncPipe, name: "async" }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepickerStandaloneComponent, decorators: [{
            type: Component,
            args: [{ selector: "ngx-mat-timepicker-standalone", host: {
                        "[class.mat-app-background]": "true"
                    }, encapsulation: ViewEncapsulation.None, standalone: true, imports: [
                        MatButtonModule,
                        A11yModule,
                        NgxMatTimepickerContentComponent,
                        NgClass,
                        MatToolbarModule,
                        NgxMatTimepickerDialComponent,
                        NgSwitch,
                        NgSwitchCase,
                        NgIf,
                        NgxMatTimepicker24HoursFaceComponent,
                        NgxMatTimepicker12HoursFaceComponent,
                        NgxMatTimepickerMinutesFaceComponent,
                        NgTemplateOutlet,
                        AsyncPipe
                    ], template: "<ng-template #cancelBtnDefault>\r\n\t<button mat-button\r\n\t\t\t[color]=\"color\">CANCEL\r\n\t</button>\r\n</ng-template>\r\n<ng-template #confirmBtnDefault>\r\n\t<button mat-button\r\n\t\t\t[color]=\"color\">OK\r\n\t</button>\r\n</ng-template>\r\n<div cdkTrapFocus>\r\n\t<ngx-mat-timepicker-content [appendToInput]=\"data.appendToInput\"\r\n\t\t\t\t\t\t\t\t[inputElement]=\"data.inputElement\">\r\n\t\t<div class=\"timepicker\"\r\n\t\t\t [ngClass]=\"data.timepickerClass\">\r\n\t\t\t<mat-toolbar [color]=\"color\"\r\n\t\t\t\t\t\t [class.is-editable]=\"data.enableKeyboardInput\"\r\n\t\t\t\t\t\t class=\"timepicker-header\">\r\n\t\t\t\t<ngx-mat-timepicker-dial [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t [hour]=\"(selectedHour | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t [minute]=\"(selectedMinute | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t\t [activeTimeUnit]=\"activeTimeUnit\"\r\n\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t [isEditable]=\"data.enableKeyboardInput\"\r\n\t\t\t\t\t\t\t\t\t\t [editableHintTmpl]=\"data.editableHintTmpl\"\r\n\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\r\n\t\t\t\t\t\t\t\t\t\t [hoursOnly]=\"data.hoursOnly\"\r\n\t\t\t\t\t\t\t\t\t\t (periodChanged)=\"changePeriod($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (timeUnitChanged)=\"changeTimeUnit($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (hourChanged)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t\t (minuteChanged)=\"onMinuteChange($event)\">\r\n\t\t\t\t</ngx-mat-timepicker-dial>\r\n\t\t\t</mat-toolbar>\r\n\t\t\t<div class=\"timepicker__main-content\">\r\n\t\t\t\t<div class=\"timepicker__body\"\r\n\t\t\t\t\t [ngSwitch]=\"activeTimeUnit\">\r\n\t\t\t\t\t<div *ngSwitchCase=\"timeUnit.HOUR\">\r\n\t\t\t\t\t\t<ngx-mat-timepicker-24-hours-face *ngIf=\"data.format === 24;else ampmHours\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourChange)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [selectedHour]=\"selectedHour | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  (hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-24-hours-face>\r\n\t\t\t\t\t\t<ng-template #ampmHours>\r\n\t\t\t\t\t\t\t<ngx-mat-timepicker-12-hours-face\r\n\t\t\t\t\t\t\t\t\t[color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t(hourChange)=\"onHourChange($event)\"\r\n\t\t\t\t\t\t\t\t\t[selectedHour]=\"selectedHour | async\"\r\n\t\t\t\t\t\t\t\t\t[period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t[minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t[maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t(hourSelected)=\"onHourSelected($event)\"></ngx-mat-timepicker-12-hours-face>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ngx-mat-timepicker-minutes-face *ngSwitchCase=\"timeUnit.MINUTE\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [dottedMinutesInGap]=\"data.dottedMinutesInGap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [color]=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedMinute]=\"selectedMinute | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [selectedHour]=\"(selectedHour | async)?.time\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minTime]=\"data.minTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [maxTime]=\"data.maxTime\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [format]=\"data.format\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [period]=\"selectedPeriod | async\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t [minutesGap]=\"data.minutesGap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t (minuteChange)=\"onMinuteChange($event)\"></ngx-mat-timepicker-minutes-face>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ngx-mat-timepicker-content>\r\n\r\n\t<div class=\"ngx-mat-timepicker-standalone-actions\">\r\n\t\t<div (click)=\"close()\">\r\n\t\t\t<ng-container\r\n\t\t\t\t\t*ngTemplateOutlet=\"data.cancelBtnTmpl ? data.cancelBtnTmpl : cancelBtnDefault\"></ng-container>\r\n\t\t</div>\r\n\t\t<div (click)=\"setTime()\">\r\n\t\t\t<ng-container\r\n\t\t\t\t\t*ngTemplateOutlet=\"data.confirmBtnTmpl ? data.confirmBtnTmpl : confirmBtnDefault\"></ng-container>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n", styles: ["ngx-mat-timepicker-standalone{display:block;border-radius:4px;box-shadow:0 0 5px 2px #00000040;overflow:hidden}ngx-mat-timepicker-standalone ngx-mat-timepicker-content{display:block}ngx-mat-timepicker-standalone ngx-mat-timepicker-content mat-toolbar.timepicker-header{display:flex;justify-content:center;align-items:center}ngx-mat-timepicker-standalone ngx-mat-timepicker-content mat-toolbar.timepicker-header.is-editable{height:auto}ngx-mat-timepicker-standalone ngx-mat-timepicker-content .clock-face{margin:16px}ngx-mat-timepicker-standalone .ngx-mat-timepicker-standalone-actions{display:flex;flex-direction:row;justify-content:flex-end;padding:0 16px 16px}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NGX_MAT_TIMEPICKER_CONFIG]
                }] }, { type: i1.NgxMatTimepickerService }, { type: i2.NgxMatTimepickerEventService }, { type: i3.NgxMatTimepickerLocaleService }] });
//# sourceMappingURL=data:application/json;base64,