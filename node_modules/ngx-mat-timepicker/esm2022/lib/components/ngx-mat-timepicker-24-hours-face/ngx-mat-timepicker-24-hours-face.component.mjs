import { ChangeDetectionStrategy, Component } from "@angular/core";
//
import { NgxMatTimepickerHoursFaceDirective } from "../ngx-mat-timepicker-hours-face/ngx-mat-timepicker-hours-face.directive";
import { NgxMatTimepickerUtils } from "../../utils/ngx-mat-timepicker.utils";
import { NgxMatTimepickerFaceComponent } from "../ngx-mat-timepicker-face/ngx-mat-timepicker-face.component";
import * as i0 from "@angular/core";
export class NgxMatTimepicker24HoursFaceComponent extends NgxMatTimepickerHoursFaceDirective {
    constructor() {
        super();
        this.format = 24;
    }
    ngAfterContentInit() {
        this.hoursList = NgxMatTimepickerUtils.disableHours(this.hoursList, {
            min: this.minTime,
            max: this.maxTime,
            format: this.format
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepicker24HoursFaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.5", type: NgxMatTimepicker24HoursFaceComponent, isStandalone: true, selector: "ngx-mat-timepicker-24-hours-face", usesInheritance: true, ngImport: i0, template: "<ngx-mat-timepicker-face [color]=\"color\"\r\n                     [selectedTime]=\"selectedHour\"\r\n                     [faceTime]=\"hoursList\"\r\n                     [format]=\"format\"\r\n                     (timeChange)=\"hourChange.next($event)\"\r\n                     (timeSelected)=\"onTimeSelected($event)\"></ngx-mat-timepicker-face>\r\n", dependencies: [{ kind: "component", type: NgxMatTimepickerFaceComponent, selector: "ngx-mat-timepicker-face", inputs: ["color", "dottedMinutesInGap", "faceTime", "format", "minutesGap", "selectedTime", "unit"], outputs: ["timeChange", "timeSelected"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepicker24HoursFaceComponent, decorators: [{
            type: Component,
            args: [{ selector: "ngx-mat-timepicker-24-hours-face", changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgxMatTimepickerFaceComponent], template: "<ngx-mat-timepicker-face [color]=\"color\"\r\n                     [selectedTime]=\"selectedHour\"\r\n                     [faceTime]=\"hoursList\"\r\n                     [format]=\"format\"\r\n                     (timeChange)=\"hourChange.next($event)\"\r\n                     (timeSelected)=\"onTimeSelected($event)\"></ngx-mat-timepicker-face>\r\n" }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLTI0LWhvdXJzLWZhY2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LW1hdC10aW1lcGlja2VyL3NyYy9saWIvY29tcG9uZW50cy9uZ3gtbWF0LXRpbWVwaWNrZXItMjQtaG91cnMtZmFjZS9uZ3gtbWF0LXRpbWVwaWNrZXItMjQtaG91cnMtZmFjZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbWF0LXRpbWVwaWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL25neC1tYXQtdGltZXBpY2tlci0yNC1ob3Vycy1mYWNlL25neC1tYXQtdGltZXBpY2tlci0yNC1ob3Vycy1mYWNlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBbUIsdUJBQXVCLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ25GLEVBQUU7QUFDRixPQUFPLEVBQ0gsa0NBQWtDLEVBQ3JDLE1BQU0sMEVBQTBFLENBQUM7QUFDbEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sOERBQThELENBQUM7O0FBUzNHLE1BQU0sT0FBTyxvQ0FBcUMsU0FBUSxrQ0FBa0M7SUFFeEY7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxrQkFBa0I7UUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hFLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTztZQUNqQixHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDakIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3RCLENBQUMsQ0FBQztJQUNQLENBQUM7OEdBYlEsb0NBQW9DO2tHQUFwQyxvQ0FBb0MsbUhDZmpELG1XQU1BLDRDRE9jLDZCQUE2Qjs7MkZBRTlCLG9DQUFvQztrQkFQaEQsU0FBUzsrQkFDSSxrQ0FBa0MsbUJBRTNCLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQLENBQUMsNkJBQTZCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbi8vXHJcbmltcG9ydCB7XHJcbiAgICBOZ3hNYXRUaW1lcGlja2VySG91cnNGYWNlRGlyZWN0aXZlXHJcbn0gZnJvbSBcIi4uL25neC1tYXQtdGltZXBpY2tlci1ob3Vycy1mYWNlL25neC1tYXQtdGltZXBpY2tlci1ob3Vycy1mYWNlLmRpcmVjdGl2ZVwiO1xyXG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJVdGlsc30gZnJvbSBcIi4uLy4uL3V0aWxzL25neC1tYXQtdGltZXBpY2tlci51dGlsc1wiO1xyXG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJGYWNlQ29tcG9uZW50fSBmcm9tIFwiLi4vbmd4LW1hdC10aW1lcGlja2VyLWZhY2Uvbmd4LW1hdC10aW1lcGlja2VyLWZhY2UuY29tcG9uZW50XCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcIm5neC1tYXQtdGltZXBpY2tlci0yNC1ob3Vycy1mYWNlXCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCJuZ3gtbWF0LXRpbWVwaWNrZXItMjQtaG91cnMtZmFjZS5jb21wb25lbnQuaHRtbFwiLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gICAgaW1wb3J0czogW05neE1hdFRpbWVwaWNrZXJGYWNlQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4TWF0VGltZXBpY2tlcjI0SG91cnNGYWNlQ29tcG9uZW50IGV4dGVuZHMgTmd4TWF0VGltZXBpY2tlckhvdXJzRmFjZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5mb3JtYXQgPSAyNDtcclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5ob3Vyc0xpc3QgPSBOZ3hNYXRUaW1lcGlja2VyVXRpbHMuZGlzYWJsZUhvdXJzKHRoaXMuaG91cnNMaXN0LCB7XHJcbiAgICAgICAgICAgIG1pbjogdGhpcy5taW5UaW1lLFxyXG4gICAgICAgICAgICBtYXg6IHRoaXMubWF4VGltZSxcclxuICAgICAgICAgICAgZm9ybWF0OiB0aGlzLmZvcm1hdFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsIjxuZ3gtbWF0LXRpbWVwaWNrZXItZmFjZSBbY29sb3JdPVwiY29sb3JcIlxyXG4gICAgICAgICAgICAgICAgICAgICBbc2VsZWN0ZWRUaW1lXT1cInNlbGVjdGVkSG91clwiXHJcbiAgICAgICAgICAgICAgICAgICAgIFtmYWNlVGltZV09XCJob3Vyc0xpc3RcIlxyXG4gICAgICAgICAgICAgICAgICAgICBbZm9ybWF0XT1cImZvcm1hdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICh0aW1lQ2hhbmdlKT1cImhvdXJDaGFuZ2UubmV4dCgkZXZlbnQpXCJcclxuICAgICAgICAgICAgICAgICAgICAgKHRpbWVTZWxlY3RlZCk9XCJvblRpbWVTZWxlY3RlZCgkZXZlbnQpXCI+PC9uZ3gtbWF0LXRpbWVwaWNrZXItZmFjZT5cclxuIl19