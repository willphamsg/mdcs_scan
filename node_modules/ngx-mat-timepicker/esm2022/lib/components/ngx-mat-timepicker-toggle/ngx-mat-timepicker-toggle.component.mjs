import { Component, ContentChild, Input, ViewEncapsulation } from "@angular/core";
import { NgIf } from "@angular/common";
import { MatButtonModule } from "@angular/material/button";
//
import { NgxMatTimepickerToggleIconDirective } from "../../directives/ngx-mat-timepicker-toggle-icon.directive";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
export class NgxMatTimepickerToggleComponent {
    get disabled() {
        return this._disabled === void 0 ? this.timepicker?.disabled : this._disabled;
    }
    set disabled(value) {
        this._disabled = value;
    }
    open(event) {
        if (this.timepicker) {
            this.timepicker.open();
            event.stopPropagation();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepickerToggleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.5", type: NgxMatTimepickerToggleComponent, isStandalone: true, selector: "ngx-mat-timepicker-toggle", inputs: { disabled: "disabled", timepicker: ["for", "timepicker"] }, queries: [{ propertyName: "customIcon", first: true, predicate: NgxMatTimepickerToggleIconDirective, descendants: true, static: true }], ngImport: i0, template: "<button class=\"ngx-mat-timepicker-toggle mat-elevation-z0\"\r\n        color=\"\"\r\n        mat-icon-button\r\n        (click)=\"open($event)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"button\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n         class=\"ngx-mat-timepicker-toggle-default-icon\"\r\n         fill=\"currentColor\"\r\n         viewBox=\"0 0 24 24\"\r\n         width=\"24px\"\r\n         height=\"24px\"\r\n         *ngIf=\"!customIcon\">\r\n        <path d=\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\" />\r\n    </svg>\r\n\r\n    <ng-content select=\"[ngxMatTimepickerToggleIcon]\"></ng-content>\r\n</button>\r\n", styles: ["button.ngx-mat-timepicker-toggle{background-color:transparent;text-align:center;-webkit-user-select:none;user-select:none;cursor:pointer;box-shadow:none}.mat-form-field .ngx-mat-timepicker-toggle-default-icon{margin:auto}.mat-form-field .ngx-mat-timepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}body .ngx-mat-timepicker-toggle{color:#0000008a}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: NgxMatTimepickerToggleComponent, decorators: [{
            type: Component,
            args: [{ selector: "ngx-mat-timepicker-toggle", encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatButtonModule, NgIf], template: "<button class=\"ngx-mat-timepicker-toggle mat-elevation-z0\"\r\n        color=\"\"\r\n        mat-icon-button\r\n        (click)=\"open($event)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"button\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n         class=\"ngx-mat-timepicker-toggle-default-icon\"\r\n         fill=\"currentColor\"\r\n         viewBox=\"0 0 24 24\"\r\n         width=\"24px\"\r\n         height=\"24px\"\r\n         *ngIf=\"!customIcon\">\r\n        <path d=\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\" />\r\n    </svg>\r\n\r\n    <ng-content select=\"[ngxMatTimepickerToggleIcon]\"></ng-content>\r\n</button>\r\n", styles: ["button.ngx-mat-timepicker-toggle{background-color:transparent;text-align:center;-webkit-user-select:none;user-select:none;cursor:pointer;box-shadow:none}.mat-form-field .ngx-mat-timepicker-toggle-default-icon{margin:auto}.mat-form-field .ngx-mat-timepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}body .ngx-mat-timepicker-toggle{color:#0000008a}\n"] }]
        }], propDecorators: { disabled: [{
                type: Input
            }], customIcon: [{
                type: ContentChild,
                args: [NgxMatTimepickerToggleIconDirective, { static: true }]
            }], timepicker: [{
                type: Input,
                args: ["for"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC10aW1lcGlja2VyLXRvZ2dsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbWF0LXRpbWVwaWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL25neC1tYXQtdGltZXBpY2tlci10b2dnbGUvbmd4LW1hdC10aW1lcGlja2VyLXRvZ2dsZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbWF0LXRpbWVwaWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL25neC1tYXQtdGltZXBpY2tlci10b2dnbGUvbmd4LW1hdC10aW1lcGlja2VyLXRvZ2dsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxFQUFFO0FBQ0YsT0FBTyxFQUFDLG1DQUFtQyxFQUFDLE1BQU0sMkRBQTJELENBQUM7OztBQVk5RyxNQUFNLE9BQU8sK0JBQStCO0lBRXhDLElBQ0ksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDLFNBQVMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDbEYsQ0FBQztJQUVELElBQUksUUFBUSxDQUFDLEtBQWM7UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQVNELElBQUksQ0FBQyxLQUFpQjtRQUNsQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNsQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3ZCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUM1QixDQUFDO0lBQ0wsQ0FBQzs4R0F2QlEsK0JBQStCO2tHQUEvQiwrQkFBK0Isa01BVzFCLG1DQUFtQyw4REMzQnJELDYrQkFrQkEsdWFETGMsZUFBZSw0SUFBRSxJQUFJOzsyRkFHdEIsK0JBQStCO2tCQVQzQyxTQUFTOytCQUNJLDJCQUEyQixpQkFHdEIsaUJBQWlCLENBQUMsSUFBSSxjQUN6QixJQUFJLFdBQ1AsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDOzhCQU01QixRQUFRO3NCQURYLEtBQUs7Z0JBUzZELFVBQVU7c0JBQTVFLFlBQVk7dUJBQUMsbUNBQW1DLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO2dCQUduRCxVQUFVO3NCQUF2QixLQUFLO3VCQUFDLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgVmlld0VuY2Fwc3VsYXRpb259IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE5nSWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XHJcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9idXR0b25cIjtcclxuLy9cclxuaW1wb3J0IHtOZ3hNYXRUaW1lcGlja2VyVG9nZ2xlSWNvbkRpcmVjdGl2ZX0gZnJvbSBcIi4uLy4uL2RpcmVjdGl2ZXMvbmd4LW1hdC10aW1lcGlja2VyLXRvZ2dsZS1pY29uLmRpcmVjdGl2ZVwiO1xyXG5pbXBvcnQge05neE1hdFRpbWVwaWNrZXJDb21wb25lbnR9IGZyb20gXCIuLi9uZ3gtbWF0LXRpbWVwaWNrZXIvbmd4LW1hdC10aW1lcGlja2VyLmNvbXBvbmVudFwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJuZ3gtbWF0LXRpbWVwaWNrZXItdG9nZ2xlXCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCJuZ3gtbWF0LXRpbWVwaWNrZXItdG9nZ2xlLmNvbXBvbmVudC5odG1sXCIsXHJcbiAgICBzdHlsZVVybHM6IFtcIm5neC1tYXQtdGltZXBpY2tlci10b2dnbGUuY29tcG9uZW50LnNjc3NcIl0sXHJcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICAgIGltcG9ydHM6IFtNYXRCdXR0b25Nb2R1bGUsIE5nSWZdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTmd4TWF0VGltZXBpY2tlclRvZ2dsZUNvbXBvbmVudCB7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQgPT09IHZvaWQgMCA/IHRoaXMudGltZXBpY2tlcj8uZGlzYWJsZWQgOiB0aGlzLl9kaXNhYmxlZDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl9kaXNhYmxlZCA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIEBDb250ZW50Q2hpbGQoTmd4TWF0VGltZXBpY2tlclRvZ2dsZUljb25EaXJlY3RpdmUsIHtzdGF0aWM6IHRydWV9KSBjdXN0b21JY29uOiBOZ3hNYXRUaW1lcGlja2VyVG9nZ2xlSWNvbkRpcmVjdGl2ZTtcclxuXHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8taW5wdXQtcmVuYW1lXHJcbiAgICBASW5wdXQoXCJmb3JcIikgdGltZXBpY2tlcjogTmd4TWF0VGltZXBpY2tlckNvbXBvbmVudDtcclxuXHJcbiAgICBwcml2YXRlIF9kaXNhYmxlZDogYm9vbGVhbjtcclxuXHJcbiAgICBvcGVuKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZXBpY2tlcikge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVwaWNrZXIub3BlbigpO1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiPGJ1dHRvbiBjbGFzcz1cIm5neC1tYXQtdGltZXBpY2tlci10b2dnbGUgbWF0LWVsZXZhdGlvbi16MFwiXHJcbiAgICAgICAgY29sb3I9XCJcIlxyXG4gICAgICAgIG1hdC1pY29uLWJ1dHRvblxyXG4gICAgICAgIChjbGljayk9XCJvcGVuKCRldmVudClcIlxyXG4gICAgICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXHJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiPlxyXG4gICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcclxuICAgICAgICAgY2xhc3M9XCJuZ3gtbWF0LXRpbWVwaWNrZXItdG9nZ2xlLWRlZmF1bHQtaWNvblwiXHJcbiAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcclxuICAgICAgICAgd2lkdGg9XCIyNHB4XCJcclxuICAgICAgICAgaGVpZ2h0PVwiMjRweFwiXHJcbiAgICAgICAgICpuZ0lmPVwiIWN1c3RvbUljb25cIj5cclxuICAgICAgICA8cGF0aCBkPVwiTSAxMiAyIEMgNi40ODg5OTcxIDIgMiA2LjQ4ODk5NzEgMiAxMiBDIDIgMTcuNTExMDAzICAgICAgICAgICAgICAgICAgIDYuNDg4OTk3MSAyMiAxMiAyMiBDIDE3LjUxMTAwMyAyMiAyMiAxNy41MTEwMDMgMjIgMTIgQyAyMiA2LjQ4ODk5NzEgMTcuNTExMDAzIDIgMTIgMiB6IE0gMTIgNCBDIDE2LjQzMDEyMyA0IDIwIDcuNTY5ODc3NCAyMCAxMiBDIDIwIDE2LjQzMDEyMyAxNi40MzAxMjMgMjAgMTIgMjAgQyA3LjU2OTg3NzQgMjAgNCAxNi40MzAxMjMgNCAxMiBDIDQgNy41Njk4Nzc0IDcuNTY5ODc3NCA0IDEyIDQgeiBNIDExIDYgTCAxMSAxMi40MTQwNjIgTCAxNS4yOTI5NjkgMTYuNzA3MDMxIEwgMTYuNzA3MDMxIDE1LjI5Mjk2OSBMIDEzIDExLjU4NTkzOCBMIDEzIDYgTCAxMSA2IHpcIiAvPlxyXG4gICAgPC9zdmc+XHJcblxyXG4gICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW25neE1hdFRpbWVwaWNrZXJUb2dnbGVJY29uXVwiPjwvbmctY29udGVudD5cclxuPC9idXR0b24+XHJcbiJdfQ==