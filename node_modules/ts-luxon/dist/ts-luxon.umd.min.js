!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).tsLuxon={})}(this,function(e){"use strict";class t extends Error{}class F extends t{constructor(e){super("Invalid DateTime: "+e.toMessage())}}class Z extends t{constructor(e){super("Invalid Duration: "+e.toMessage())}}class z extends t{constructor(e){super("Invalid Interval: "+e.toMessage())}}class L extends t{constructor(e){super("Invalid unit "+e),Object.setPrototypeOf(this,L.prototype)}}class q extends t{constructor(e){super(e+" is an invalid or unknown zone specifier"),Object.setPrototypeOf(this,q.prototype)}}class h extends t{constructor(e){super(e),Object.setPrototypeOf(this,h.prototype)}}class u extends t{constructor(e){super(e),Object.setPrototypeOf(this,u.prototype)}}class r extends t{constructor(){super("Zone is an abstract class"),Object.setPrototypeOf(this,r.prototype)}}function A(...e){e.length}class s{get type(){throw new r}get ianaName(){return this.name}get name(){throw new r}get isUniversal(){throw new r}offsetName(e,t){throw A(e,t),new r}formatOffset(e,t){throw A(e,t),new r}offset(e){throw A(e),new r}equals(e){throw A(e),new r}get isValid(){throw new r}}var c=Intl;let U={};const $={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};let R={};class a extends s{static create(e){return R[e]||(R[e]=new a(e)),R[e]}static resetCache(){R={},U={}}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new c.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this._zoneName=e,this._valid=a.isValidZone(e)}get type(){return"iana"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}={}){return Ot(e,t,r,this.name)}formatOffset(e,t){return Tt(this.offset(e),t)}offset(e){e=new Date(e);if(isNaN(+e))return NaN;var t=function(t){if(!U[t])try{U[t]=new c.DateTimeFormat("en-US",{hour12:!1,timeZone:t,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"})}catch(e){throw new q(t)}return U[t]}(this.name);let r;var[t,s,n,i,a,o,u]=(typeof t.formatToParts==typeof isNaN?function(e,t){var r=e.formatToParts(t),s=[];for(let e=0;e<r.length;e++){var{type:n,value:i}=r[e],a=$[n];"era"===n?s[a]=i:w(a)||(s[a]=parseInt(i,10))}return s}:function(e,t){var e=e.format(t).replace(/\u200E/g,""),[,t,e,r,s,n,i,a]=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(e);return[r,t,e,s,n,i,a]})(t,e),a=24===a?0:a,e=+e,l=e%1e3;return(_t({year:(r="BC"===i?1-Math.abs(+t):r)||+t,month:+s,day:+n,hour:+a,minute:+o,second:+u,millisecond:0})-(e-=0<=l?l:1e3+l))/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this._valid}}var n="numeric",i="short",o="long";const P={year:n,month:n,day:n};var Y={year:n,month:i,day:n},H={year:n,month:i,day:n,weekday:i},J={year:n,month:o,day:n},G={year:n,month:o,day:n,weekday:o},B={hour:n,minute:n},Q={hour:n,minute:n,second:n},K={hour:n,minute:n,second:n,timeZoneName:i},X={hour:n,minute:n,second:n,timeZoneName:o},ee={hour:n,minute:n,hourCycle:"h23"},te={hour:n,minute:n,second:n,hourCycle:"h23"},re={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:i},se={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:o},ne={year:n,month:n,day:n,hour:n,minute:n},ie={year:n,month:n,day:n,hour:n,minute:n,second:n},ae={year:n,month:i,day:n,hour:n,minute:n},oe={year:n,month:i,day:n,hour:n,minute:n,second:n},ue={year:n,month:i,day:n,weekday:i,hour:n,minute:n},le={year:n,month:o,day:n,hour:n,minute:n,timeZoneName:i},i={year:n,month:o,day:n,hour:n,minute:n,second:n,timeZoneName:i},ce={year:n,month:o,day:n,weekday:o,hour:n,minute:n,timeZoneName:o},n={year:n,month:o,day:n,weekday:o,hour:n,minute:n,second:n,timeZoneName:o};const he=["January","February","March","April","May","June","July","August","September","October","November","December"],de=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],me=["J","F","M","A","M","J","J","A","S","O","N","D"];function fe(e){switch(e){case"narrow":return[...me];case"short":return[...de];case"long":return[...he];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"]}}const ye=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],ge=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],_e=["M","T","W","T","F","S","S"];function ve(e){switch(e){case"narrow":return[..._e];case"short":return[...ge];case"long":return[...ye];case"numeric":return["1","2","3","4","5","6","7"]}}const pe=["AM","PM"],we=["Before Christ","Anno Domini"],Oe=["BC","AD"],ke=["B","A"];function be(e){switch(e){case"narrow":return[...ke];case"short":return[...Oe];case"long":return[...we]}}let Se={};let Te={};function Ne(e,t={}){var r=JSON.stringify([e,t]);let s=Te[r];return s||(s=new c.DateTimeFormat(e,t),Te[r]=s),s}let De={};let Me={};let Ie;function Ee(e,t,r,s){return("en"===e.listingMode()?r:s)(t)}class je{constructor(e,t,r){var{padTo:s,floor:n}=r,i=function(e,t){var r={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var s=0,n=Object.getOwnPropertySymbols(e);s<n.length;s++)t.indexOf(n[s])<0&&Object.prototype.propertyIsEnumerable.call(e,n[s])&&(r[n[s]]=e[n[s]]);return r}(r,["padTo","floor"]);this._padTo=s||0,this._floor=n||!1,(!t||0<Object.keys(i).length)&&(n=Object.assign({useGrouping:!1},r),0<this._padTo&&(n.minimumIntegerDigits=s),this._inf=function(e,t){var r=JSON.stringify([e,t]);let s=De[r];return s||(s=new c.NumberFormat(e,t),De[r]=s),s}(e,n))}format(e){var t;return this._inf?(t=this._floor?Math.floor(e):e,this._inf.format(t)):b(this._floor?Math.floor(e):ft(e,3),this._padTo)}}class xe{get dtf(){return this._dtf}constructor(e,t,r){this._opts=r;let s;this._opts.timeZone?this._dt=e:"fixed"===e.zone.type?(r=0<=(r=e.offset/60*-1)?"Etc/GMT+"+r:"Etc/GMT"+r,0!==e.offset&&a.create(r).isValid?(s=r,this._dt=e):(s="UTC",this._dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone)):"system"===e.zone.type?this._dt=e:"iana"===e.zone.type?(this._dt=e,s=e.zone.name):(s="UTC",this._dt=e.setZone("UTC").plus({minutes:e.offset}),this._originalZone=e.zone);r=Object.assign(Object.assign({},this._opts),{timeZone:this._opts.timeZone||s});this._dtf=Ne(t,r)}format(){return this._originalZone?this.formatToParts().map(({value:e})=>e).join(""):this.dtf.format(this._dt.toJSDate())}formatToParts(){var e=this.dtf.formatToParts(this._dt.toJSDate());return this._originalZone?e.map(e=>{var t;return"timeZoneName"===e.type?(t=this._originalZone.offsetName(this._dt.ts,{locale:this._dt.locale,format:this._opts.timeZoneName}),Object.assign(Object.assign({},e),{value:t})):e}):e}resolvedOptions(){return this._dtf.resolvedOptions()}}class Ve{constructor(e,t,r){this._opts=Object.assign({style:"long"},r),!t&&lt()&&(this._rtf=function(e,t={}){var r=JSON.stringify([e,t]);let s=Me[r];return s||(s=new c.RelativeTimeFormat(e,t),Me[r]=s),s}(e,r))}format(e,t){if(this._rtf)return this._rtf.format(e,t);var[t,e,r="always",s]=[t,e,this._opts.numeric,"long"!==this._opts.style],n={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."],milliseconds:[]}[t=j.normalizeUnit(t)],i=-1===["hours","minutes","seconds"].indexOf(t);if("auto"===r&&i){var a="days"===t;switch(e){case 1:return a?"tomorrow":"next "+n[0];case-1:return a?"yesterday":"last "+n[0];case 0:return a?"today":"this "+n[0]}}return r=Object.is(e,-0)||e<0,i=Math.abs(e),e=1===i,s=s?!e&&n[2]||n[1]:e?n[0]:t,r?i+` ${s} ago`:`in ${i} `+s}formatToParts(e,t){return this._rtf?this._rtf.formatToParts(e,t):[]}}class d{get fastNumbers(){return void 0===this._fastNumbersCached&&(this._fastNumbersCached=this._supportsFastNumbers()),this._fastNumbersCached}constructor(e,t,r,s,n){var[e,i,a]=function(s){if(-1===(n=(s=-1!==(n=s.indexOf("-x-"))?s.substring(0,n):s).indexOf("-u-")))return[s];{let t,r;try{t=Ne(s).resolvedOptions(),r=s}catch(e){s=s.substring(0,n);t=Ne(s).resolvedOptions(),r=s}var{numberingSystem:n,calendar:s}=t;return[r,n,s]}}(e);this.locale=e,this.numberingSystem=t||i,this.outputCalendar=r||a,this._intl=(e=this.locale,t=this.numberingSystem,((i=this.outputCalendar)||t)&&(e.includes("-u-")||(e+="-u"),i&&(e+="-ca-"+i),t)&&(e+="-nu-"+t),e),this._weekSettings=s,this._weekdaysCache={format:{},standalone:{}},this._monthsCache={format:{},standalone:{}},this._meridiemCache=void 0,this._eraCache={},this._specifiedLocale=n,this._fastNumbersCached=void 0}static create(e,t,r,s,n=!1){e=e||g.defaultLocale,n=e||(n?"en-US":Ie=Ie||(new c.DateTimeFormat).resolvedOptions().locale),t=t||g.defaultNumberingSystem,r=r||g.defaultOutputCalendar,s=dt(s)||g.defaultWeekSettings;return new d(n,t,r,s,e)}static fromObject({locale:e,numberingSystem:t,outputCalendar:r,weekSettings:s}={}){return d.create(e,t,r,s)}static fromOpts(e){return d.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static resetCache(){Ie=void 0,Se={},Te={},De={},Me={}}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?d.create(e.locale||this._specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,dt(e.weekSettings)||this._weekSettings,e.defaultToEN||!1):this}dtFormatter(e,t={}){return new xe(e,this._intl,t)}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}eras(e){return Ee(this,e,be,e=>{const t={era:e};return this._eraCache[e]||(this._eraCache[e]=[W.utc(-40,1,1),W.utc(2017,1,1)].map(e=>this.extract(e,t,"era"))),this._eraCache[e]})}extract(e,t,r){e=this.dtFormatter(e,t).formatToParts().find(e=>e.type.toLowerCase()===r.toLowerCase());if(e)return e.value;throw new Error("Invalid extract field "+r)}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getStartOfWeek(){return this.getWeekSettings().firstDay}getWeekSettings(){return this._weekSettings||(ct()?this._getCachedWeekInfo(this.locale):M)}getWeekendDays(){return this.getWeekSettings().weekend}isEnglish(){return!!~["en","en-us"].indexOf(this.locale.toLowerCase())||new c.DateTimeFormat(this._intl).resolvedOptions().locale.startsWith("en-us")}listFormatter(t={}){{var[t,r={}]=[this._intl,t],s=JSON.stringify([t,r]);let e=Se[s];return e||(e=new c.ListFormat(t,r),Se[s]=e),e}}listingMode(){var e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}meridiems(){return Ee(this,"long",()=>pe,()=>(void 0===this._meridiemCache&&(this._meridiemCache=[W.utc(2016,11,13,9),W.utc(2016,11,13,19)].map(e=>this.extract(e,{hour:"numeric",hourCycle:"h12"},"dayPeriod"))),this._meridiemCache))}months(e,s=!1){return Ee(this,e,fe,e=>{const t=s?{month:e,day:"numeric"}:{month:e};var r=s?"format":"standalone";return this._monthsCache[r][e]||(this._monthsCache[r][e]=function(t){var r=[];for(let e=1;e<=12;e++){var s=W.utc(2009,e,1);r.push(t(s))}return r}(e=>this.extract(e,t,"month"))),this._monthsCache[r][e]})}numberFormatter(e={}){return new je(this._intl,this.fastNumbers,e)}redefaultToEN(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!0}))}redefaultToSystem(e={}){return this.clone(Object.assign(Object.assign({},e),{defaultToEN:!1}))}relFormatter(e={}){return new Ve(this._intl,this.isEnglish(),e)}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`}weekdays(e,s=!1){return Ee(this,e,ve,e=>{const t=s?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e};var r=s?"format":"standalone";return this._weekdaysCache[r][e]||(this._weekdaysCache[r][e]=function(t){var r=[];for(let e=1;e<=7;e++){var s=W.utc(2016,11,13+e);r.push(t(s))}return r}(e=>this.extract(e,t,"weekday"))),this._weekdaysCache[r][e]})}_getCachedWeekInfo(e){let t=d._weekInfoCache[e];var r;return t||(r=new c.Locale(e),t="getWeekInfo"in r?r.getWeekInfo():r.weekInfo,d._weekInfoCache[e]=t),t}_supportsFastNumbers(){return(!this.numberingSystem||"latn"===this.numberingSystem)&&("latn"===this.numberingSystem||!this.locale||this.locale.startsWith("en")||"latn"===c.DateTimeFormat(this._intl).resolvedOptions().numberingSystem)}}d._weekInfoCache={};let Ce=null;class m extends s{static get utcInstance(){return Ce=null===Ce?new m(0):Ce}get ianaName(){return 0===this._fixed?"Etc/UTC":"Etc/GMT"+Tt(-this._fixed,"narrow")}get isUniversal(){return!0}get isValid(){return!0}get name(){return 0===this._fixed?"UTC":"UTC"+Tt(this._fixed,"narrow")}get type(){return"fixed"}constructor(e){super(),this._fixed=e}static instance(e){return 0===e?m.utcInstance:new m(e)}static parseSpecifier(e){if(e){e=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(e)return new m(kt(e[1],e[2]))}return null}equals(e){return"fixed"===e.type&&e._fixed===this._fixed}formatOffset(e,t){return Tt(this._fixed,t)}offset(){return this._fixed}offsetName(){return this.name}}class We extends s{constructor(e){super(),this._zoneName=e,Object.setPrototypeOf(this,We.prototype)}get type(){return"invalid"}get name(){return this._zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}let Fe=null;class Ze extends s{static get instance(){return Fe=null===Fe?new Ze:Fe}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}){return Ot(e,t,r)}formatOffset(e,t){return Tt(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}const f=(e,t)=>{var r;return w(e)||null===e?t:e instanceof s?e:"string"==typeof e?"default"===(r=e.toLowerCase())?t:"local"===r||"system"===r?Ze.instance:"utc"===r||"gmt"===r?m.utcInstance:m.parseSpecifier(r)||a.create(e):O(e)?m.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new We(e)},ze={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},Le={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},qe=ze.hanidec.replace(/[\[|\]]/g,"").split("");let l={};function y({numberingSystem:e},t=""){e=e||"latn";return l[e]||(l[e]={}),l[e][t]||(l[e][t]=new RegExp(""+ze[e]+t)),l[e][t]}let Ae=()=>Date.now(),Ue="system",$e,Re,Pe,Ye=60,He=!1,Je;class g{static set defaultLocale(e){$e=e}static get defaultLocale(){return $e}static set defaultNumberingSystem(e){Re=e}static get defaultNumberingSystem(){return Re}static set defaultOutputCalendar(e){Pe=e}static get defaultOutputCalendar(){return Pe}static set defaultWeekSettings(e){Je=dt(e)}static get defaultWeekSettings(){return Je}static set defaultZone(e){Ue=e}static get defaultZone(){return f(Ue,Ze.instance)}static set defaultZoneLike(e){Ue=e}static set now(e){Ae=e}static get now(){return Ae}static set throwOnInvalid(e){He=e}static get throwOnInvalid(){return He}static set twoDigitCutoffYear(e){Ye=e%100}static get twoDigitCutoffYear(){return Ye}static resetCaches(){d.resetCache(),a.resetCache(),W.resetCache(),l={}}}class _{constructor(e,t){this.reason=e,this.explanation=t,this._formattedExplanation="",t&&(this._formattedExplanation=": "+t)}toMessage(){return""+this.reason+this._formattedExplanation}}const Ge=[0,31,59,90,120,151,181,212,243,273,304,334],Be=[0,31,60,91,121,152,182,213,244,274,305,335];function v(e,t){return new _("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function Qe(e,t,r){return r+(yt(e)?Be:Ge)[t-1]}function Ke(e,t){var e=yt(e)?Be:Ge,r=e.findIndex(e=>e<t);return{month:r+1,day:t-e[r]}}function Xe(e,t,r){t=new Date(Date.UTC(e,t-1,r)),e<100&&0<=e&&t.setUTCFullYear(t.getUTCFullYear()-1900),r=t.getUTCDay();return 0===r?7:r}function et(e,t=M.minimalDays,r=M.firstDay){var{year:s,month:n,day:i}=e,a=Qe(s,n,i),n=at(Xe(s,n,i),r);let o=Math.floor((a-n+14-t)/7),u;return o<1?(u=s-1,o=pt(u,t,r)):o>pt(s,t,r)?(u=s+1,o=1):u=s,Object.assign({weekYear:u,weekNumber:o,weekday:n},Nt(e))}function tt(e,t=M.minimalDays,r=M.firstDay){var{weekYear:s,weekNumber:n,weekday:i}=e,r=at(Xe(s,1,t),r),a=N(s);let o=7*n+i-r-7+t,u;o<1?(u=s-1,o+=N(u)):o>a?(u=s+1,o-=N(s)):u=s;var{month:n,day:i}=Ke(u,o);return Object.assign({year:u,month:n,day:i},Nt(e))}function rt(e){var{year:t,month:r,day:s}=e,r=Qe(t,r,s);return Object.assign({year:t,ordinal:r},Nt(e))}function st(e){var{year:t,ordinal:r}=e,{month:r,day:s}=Ke(t,r);return Object.assign({year:t,month:r,day:s},Nt(e))}function nt(e){var t=ut(e.year),r=k(e.month,1,12),s=k(e.day,1,gt(e.year,e.month));return t?r?!s&&v("day",e.day):v("month",e.month):v("year",e.year)}function it(e){var{hour:e,minute:t,second:r,millisecond:s}=e,n=k(e,0,23)||24===e&&0===t&&0===r&&0===s,i=k(t,0,59),a=k(r,0,59),o=k(s,0,999);return n?i?a?!o&&v("millisecond",s):v("second",r):v("minute",t):v("hour",e)}function at(e,t){return(e-t+7)%7+1}function ot(e,t){if(p(e.localWeekday)||p(e.localWeekNumber)||p(e.localWeekYear)){if(p(e.weekday)||p(e.weekNumber)||p(e.weekYear))throw new h("Cannot mix locale-based week fields with ISO-based week fields");return p(e.localWeekday)&&(e.weekday=e.localWeekday),p(e.localWeekNumber)&&(e.weekNumber=e.localWeekNumber),p(e.localWeekYear)&&(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:M.minimalDays,startOfWeek:M.firstDay}}function p(e){return void 0!==e}function w(e){return void 0===e}function O(e){return"number"==typeof e}function ut(e){return O(e)&&e%1==0}function lt(){try{return void 0!==c&&!!c.RelativeTimeFormat}catch(e){return!1}}function ct(){try{return void 0!==c&&!!c.Locale&&("weekInfo"in c.Locale.prototype||"getWeekInfo"in c.Locale.prototype)}catch(e){return!1}}function ht(e,r,s){if(0!==e.length)return e.reduce((e,t)=>{t=[r(t),t];return s(e[0],t[0])===e[0]?e:t},[r(e[0]),e[0]])[1]}function dt(e){if(e){if("object"!=typeof e)throw new u("Week settings must be an object");if(k(e.firstDay,1,7)&&k(e.minimalDays,1,7)&&Array.isArray(e.weekend)&&!e.weekend.some(e=>!k(e,1,7)))return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:e.weekend};throw new u("Invalid week settings")}}function k(e,t,r){return ut(e)&&t<=e&&e<=r}function b(e,t=2){var r=+e<0?"-":"",e=r?-1*+e:e;let s;return r+(s=e.toString().length<t?("0".repeat(t)+e).slice(-t):e.toString())}function S(e){if(e)return parseInt(e,10)}function T(e){if(e)return parseFloat(e)}function mt(e){if(!w(e)&&null!==e&&""!==e)return e=1e3*parseFloat("0."+e),Math.floor(e)}function ft(e,t,r=!1){t=Math.pow(10,t);return(r?Math.trunc:Math.round)(e*t)/t}function yt(e){return e%4==0&&(e%100!=0||e%400==0)}function N(e){return yt(e)?366:365}function gt(e,t){var r,s=(s=t-1)-(r=12)*Math.floor(s/r)+1;return[31,yt(e+(t-s)/12)?29:28,31,30,31,30,31,31,30,31,30,31][s-1]}function _t(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&0<=e.year&&(t=new Date(t)).setUTCFullYear(e.year,e.month-1,e.day),+t}function vt(e,t,r){return-at(Xe(e,1,t),r)+t-1}function pt(e,t=4,r=1){var s=vt(e,t,r),t=vt(e+1,t,r);return(N(e)-s+t)/7}function wt(e){return 99<e?e:e>g.twoDigitCutoffYear?1900+e:2e3+e}function Ot(e,t,r,s){e=new Date(e),t=Object.assign({timeZoneName:t},{hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",timeZone:s}),s=new c.DateTimeFormat(r,t).formatToParts(e).find(e=>"timezonename"===e.type.toLowerCase());return s?s.value:null}function kt(e,t){let r=parseInt(e,10);Number.isNaN(r)&&(r=0);e=parseInt(t,10)||0,t=r<0||Object.is(r,-0)?-e:e;return 60*r+t}function bt(e){var t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new u("Invalid unit value "+e);return t}function St(r,s){return Object.keys(r).reduce((e,t)=>(void 0!==r[t]&&null!==r[t]&&(e[s(t)]=bt(r[t])),e),{})}function Tt(e,t){var r=Math.trunc(Math.abs(e/60)),s=Math.trunc(Math.abs(e%60)),n=0<=e?"+":"-";switch(t){case"short":return n+b(r,2)+":"+b(s,2);case"narrow":return n+r+(0<s?":"+s:"");case"techie":return n+b(r,2)+b(s,2);default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function Nt(e){return r=e,["hour","minute","second","millisecond"].reduce((e,t)=>(e[t]=r[t],e),{});var r}const D=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],Dt=D.slice(0).reverse(),Mt=["years","months","days","hours","minutes","seconds","milliseconds"],It={year:"year",years:"year",quarter:"quarter",quarters:"quarter",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",localweeknumber:"localWeekNumber",localweeknumbers:"localWeekNumber",localweekday:"localWeekday",localweekdays:"localWeekday",localweekyear:"localWeekYear",localweekyears:"localWeekYear",minute:"minute",minutes:"minute",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"},M={firstDay:1,minimalDays:4,weekend:[6,7]};function Et(e,t){let r="";for(const s of e)s.literal?r+=s.val:r+=t(s.val);return r}const jt={D:P,DD:Y,DDD:J,DDDD:G,t:B,tt:Q,ttt:K,tttt:X,T:ee,TT:te,TTT:re,TTTT:se,f:ne,ff:ae,fff:le,ffff:ce,F:ie,FF:oe,FFF:i,FFFF:n};class I{constructor(e,t){this._opts=t,this._loc=e,this._systemLoc=void 0}static create(e,t={}){return new I(e,t)}static macroTokenToFormatOpts(e){return jt[e]}static parseFormat(t){let r=null,s="",n=!1;var i=[];for(let e=0;e<t.length;e++){var a=t.charAt(e);"'"===a?(0<s.length&&i.push({literal:n||/^\s+$/.test(s),val:s}),r=null,s="",n=!n):n||a===r?s+=a:(0<s.length&&i.push({literal:/^\s+$/.test(s),val:s}),s=a,r=a)}return 0<s.length&&i.push({literal:n||/^\s+$/.test(s),val:s}),i}dtFormatter(e,t={}){return this._loc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t))}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeFromString(s,e){const n="en"===this._loc.listingMode(),t=this._loc.outputCalendar&&"gregory"!==this._loc.outputCalendar,i=(e,t)=>this._loc.extract(s,e,t),r=e=>s.isOffsetFixed&&0===s.offset&&e.allowZ?"Z":s.isValid?s.zone.formatOffset(s.ts,e.format):"",a=()=>{return n?(e=s,pe[e.hour<12?0:1]):i({hour:"numeric",hourCycle:"h12"},"dayPeriod");var e},o=(e,t)=>{return n?(r=s,fe(e)[r.month-1]):i(t?{month:e}:{month:e,day:"numeric"},"month");var r},u=(e,t)=>{return n?(r=s,ve(e)[r.weekday-1]):i(t?{weekday:e}:{weekday:e,month:"long",day:"numeric"},"weekday");var r},l=e=>{var t=I.macroTokenToFormatOpts(e);return t?this.formatWithSystemDefault(s,t):e},c=e=>{return n?(t=s,be(e)[t.year<0?0:1]):i({era:e},"era");var t};return Et(I.parseFormat(e),e=>{switch(e){case"S":return this.num(s.millisecond);case"u":case"SSS":return this.num(s.millisecond,3);case"s":return this.num(s.second);case"ss":return this.num(s.second,2);case"uu":return this.num(Math.floor(s.millisecond/10),2);case"uuu":return this.num(Math.floor(s.millisecond/100));case"m":return this.num(s.minute);case"mm":return this.num(s.minute,2);case"h":return this.num(s.hour%12==0?12:s.hour%12);case"hh":return this.num(s.hour%12==0?12:s.hour%12,2);case"H":return this.num(s.hour);case"HH":return this.num(s.hour,2);case"Z":return r({format:"narrow",allowZ:this._opts.allowZ});case"ZZ":return r({format:"short",allowZ:this._opts.allowZ});case"ZZZ":return r({format:"techie",allowZ:this._opts.allowZ});case"ZZZZ":return s.zone.offsetName(s.ts,{format:"short",locale:this._loc.locale})||"";case"ZZZZZ":return s.zone.offsetName(s.ts,{format:"long",locale:this._loc.locale})||"";case"z":return s.zoneName||"";case"a":return a();case"d":return t?i({day:"numeric"},"day"):this.num(s.day);case"dd":return t?i({day:"2-digit"},"day"):this.num(s.day,2);case"c":return this.num(s.weekday);case"ccc":return u("short",!0);case"cccc":return u("long",!0);case"ccccc":return u("narrow",!0);case"E":return this.num(s.weekday);case"EEE":return u("short",!1);case"EEEE":return u("long",!1);case"EEEEE":return u("narrow",!1);case"L":return t?i({month:"numeric",day:"numeric"},"month"):this.num(s.month);case"LL":return t?i({month:"2-digit",day:"numeric"},"month"):this.num(s.month,2);case"LLL":return o("short",!0);case"LLLL":return o("long",!0);case"LLLLL":return o("narrow",!0);case"M":return t?i({month:"numeric"},"month"):this.num(s.month);case"MM":return t?i({month:"2-digit"},"month"):this.num(s.month,2);case"MMM":return o("short",!1);case"MMMM":return o("long",!1);case"MMMMM":return o("narrow",!1);case"y":return t?i({year:"numeric"},"year"):this.num(s.year);case"yy":return t?i({year:"2-digit"},"year"):this.num(parseInt(s.year.toString().slice(-2),10),2);case"yyyy":return t?i({year:"numeric"},"year"):this.num(s.year,4);case"yyyyyy":return t?i({year:"numeric"},"year"):this.num(s.year,6);case"G":return c("short");case"GG":return c("long");case"GGGGG":return c("narrow");case"kk":return this.num(parseInt(s.weekYear.toString().slice(-2),10),2);case"kkkk":return this.num(s.weekYear,4);case"W":return this.num(s.weekNumber);case"WW":return this.num(s.weekNumber,2);case"o":return this.num(s.ordinal);case"ooo":return this.num(s.ordinal,3);case"q":return this.num(s.quarter);case"qq":return this.num(s.quarter,2);case"X":return this.num(Math.floor(s.ts/1e3));case"x":return this.num(s.ts);default:return l(e)}})}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatDurationFromString(e,t){const r=e=>{switch(e[0]){case"S":return"milliseconds";case"s":return"seconds";case"m":return"minutes";case"h":return"hours";case"d":return"days";case"M":return"months";case"y":return"years";default:return}};var s,t=I.parseFormat(t),n=t.reduce((e,{literal:t,val:r})=>t?e:e.concat(r),[]),e=e.shiftTo(...n.map(r).filter(e=>!!e));return Et(t,(s=e,e=>{var t=r(e);return t?this.num(s.get(t),e.length):e}))}formatInterval(e,t={}){if(e.isValid)return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate());throw Error("Invalid Interval provided!")}formatWithSystemDefault(e,t){return void 0===this._systemLoc&&(this._systemLoc=this._loc.redefaultToSystem()),this._systemLoc.dtFormatter(e,Object.assign(Object.assign({},this._opts),t)).format()}num(e,t=0){var r;return this._opts.forceSimple?b(e,t):(r=Object.assign({},this._opts),0<t&&(r.padTo=t),this._loc.numberFormatter(r).format(e))}resolvedOptions(e,t={}){return this.dtFormatter(e,t).resolvedOptions()}}function xt(...e){e=e.reduce((e,t)=>e+t.source,"");return RegExp(`^${e}$`)}function Vt(...e){return i=>e.reduce(([e,t,r],s)=>{var[s,r,n]=s(i,r);return[Object.assign(Object.assign({},e),s),r||t,n]},[{},null,1]).slice(0,2)}function Ct(e,...t){if(null!=e)for(var[r,s]of t){r=r.exec(e);if(r)return s(r)}return[null,null]}function Wt(...n){return(e,t)=>{var r={};let s;for(s=0;s<n.length;s++)r[n[s]]=S(e[t+s]);return[r,null,t+s]}}var o=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/,Ft=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,Zt=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,zt=RegExp(Zt.source+`(?:${Ft.source}?(?:\\[(${o.source})\\])?)?`),E=RegExp(`(?:T${zt.source})?`),Lt=Wt("weekYear","weekNumber","weekday"),qt=Wt("year","ordinal"),Ft=RegExp(Zt.source+` ?(?:${Ft.source}|(${o.source}))?`),o=RegExp(`(?: ${Ft.source})?`);function At(e,t,r){return w(e[t])?r:S(e[t])}function Ut(e,t){return[{hour:At(e,t,0),minute:At(e,t+1,0),second:At(e,t+2,0),millisecond:mt(e[t+3])},null,t+4]}function $t(e,t){var r=!e[t]&&!e[t+1],e=kt(e[t+1],e[t+2]);return[{},r?null:m.instance(e),t+3]}function Rt(e,t){return[{},e[t]?a.create(e[t]):null,t+1]}const Pt=RegExp(`^T?${Zt.source}$`),Yt=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function Ht(e){var[e,t,r,s,n,i,a,o,u]=e;const l=e.startsWith("-");var e=!!o&&o.startsWith("-"),c=(e,t=!1)=>"number"==typeof e&&(t||e&&l)?-e:e;return[{years:c(T(t)),months:c(T(r)),weeks:c(T(s)),days:c(T(n)),hours:c(T(i)),minutes:c(T(a)),seconds:c(T(o),"-0"===o),milliseconds:c(mt(u),e)}]}const Jt={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Gt(e,t,r,s,n,i,a){let o;return e&&(o=3<e.length?ye.indexOf(e)+1:ge.indexOf(e)+1),{year:2===t.length?wt(S(t)):S(t),month:de.indexOf(r)+1,day:S(s),hour:S(n),minute:S(i),second:S(a),weekday:o}}const Bt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function Qt(e){var[,e,t,r,s,n,i,a,o,u,l,c]=e,e=Gt(e,s,r,t,n,i,a);let h;return h=o?Jt[o]:u?0:kt(l,c),[e,new m(h)]}const Kt=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,Xt=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,er=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function tr(e){var[,e,t,r,s,n,i,a]=e;return[Gt(e,s,r,t,n,i,a),m.utcInstance]}function rr(e){var[,e,t,r,s,n,i,a]=e;return[Gt(e,a,t,r,s,n,i),m.utcInstance]}const sr=xt(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,E),nr=xt(/(\d{4})-?W(\d\d)(?:-?(\d))?/,E),ir=xt(/(\d{4})-?(\d{3})/,E),ar=xt(zt),or=Vt(function(e,t){return[{year:At(e,t,0),month:At(e,t+1,1),day:At(e,t+2,1)},null,t+3]},Ut,$t,Rt),ur=Vt(Lt,Ut,$t,Rt),lr=Vt(qt,Ut,$t,Rt),cr=Vt(Ut,$t,Rt);const hr=xt(/(\d{4})-(\d\d)-(\d\d)/,o),dr=xt(Ft),mr=Vt(Ut,$t,Rt);Zt={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}};const fr=Object.assign({years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6}},Zt);E=365.2425,zt=30.436875;const yr=Object.assign({years:{quarters:4,months:12,weeks:E/7,days:E,hours:24*E,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:E/28,days:E/4,hours:24*E/4,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:zt/7,days:zt,hours:24*zt,minutes:43829.1,seconds:2629746,milliseconds:2629746e3}},Zt);function gr(e,t){var r;let s=null!=(r=t.milliseconds)?r:0;for(const n of Dt.slice(1))t[n]&&(s+=t[n]*e[n].milliseconds);return s}class j{static get _INVALID(){return"Invalid Duration"}get conversionAccuracy(){return this._conversionAccuracy}get days(){return this.isValid?this._values.days||0:NaN}get hours(){return this.isValid?this._values.hours||0:NaN}get invalidExplanation(){return this._invalid?this._invalid.explanation:null}get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this._invalid}get locale(){return this.isValid?this._loc.locale:void 0}get matrix(){return this._matrix}get milliseconds(){return this.isValid?this._values.milliseconds||0:NaN}get minutes(){return this.isValid?this._values.minutes||0:NaN}get months(){return this.isValid?this._values.months||0:NaN}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get quarters(){return this.isValid?this._values.quarters||0:NaN}get seconds(){return this.isValid?this._values.seconds||0:NaN}get weeks(){return this.isValid?this._values.weeks||0:NaN}get years(){return this.isValid?this._values.years||0:NaN}constructor(e){var t="longterm"===e.conversionAccuracy||!1;let r,s;r=t?(s="longterm",yr):(s="casual",fr),e.matrix&&(r=e.matrix),this._values=e.values||{},this._loc=e.loc||d.create(),this._conversionAccuracy=s,this._invalid=e.invalid||null,this._matrix=r,this._isLuxonDuration=!0}static fromDurationLike(e){if(O(e))return j.fromMillis(e);if(j.isDuration(e))return e;if("object"==typeof e)return j.fromObject(e);throw new u(`Unknown duration argument ${e} of type `+typeof e)}static fromISO(e,t){var[r]=Ct(e,[Yt,Ht]);return r?j.fromObject(r,t):j.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t={}){var[r]=Ct(e,[Pt,Vt(Ut)]);return r?j.fromObject(r,t):j.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromMillis(e,t={}){return j.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new u("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new j({values:St(e,j.normalizeUnit),loc:d.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static invalid(e,t){if(!e)throw new u("need to specify a reason the Duration is invalid");e=e instanceof _?e:new _(e,t);if(g.throwOnInvalid)throw new Z(e);return new j({invalid:e})}static isDuration(e){return!!e&&e._isLuxonDuration||!1}static normalizeUnit(e){var t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",localWeekNumber:"localWeekNumbers",localWeekYear:"localWeekYears",localWeekday:"localWeekdays",localWeekNumbers:"localWeekNumbers",localWeekYears:"localWeekYears",localWeekdays:"localWeekdays",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e];if(t)return t;throw new L(e)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this._values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}as(e){return this.shiftTo(e).get(e)}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this._loc.equals(e._loc))return!1;for(const s of D)if(t=this._values[s],r=e._values[s],!(void 0===t||0===t?void 0===r||0===r:t===r))return!1;var t,r;return!0}get(e){return this[j.normalizeUnit(e)]}getMaxUnit(e=!1){e=e?Mt:D;const t=this.shiftTo(...e).toObject();return e.find(e=>0<(t[e]||0))||Dt[0]}mapUnits(t){if(!this.isValid)return this;const r={};return Object.keys(this._values).forEach(e=>{r[e]=bt(t(this._values[e],e))}),this._clone(this,{values:r},!0)}minus(e){return this.isValid?(e=j.fromDurationLike(e),this.plus(e.negate())):this}negate(){if(!this.isValid)return this;const t={};return Object.keys(this._values).forEach(e=>{t[e]=0===this._values[e]?0:-this._values[e]}),this._clone(this,{values:t},!0)}normalize(){if(!this.isValid)return this;var e=this.toObject();{var n=this._matrix,i=e;const a=gr(n,i)<0?-1:1;Dt.reduce((e,t)=>{var r,s;return w(i[t])?e:(e&&(s=i[e]*a,r=n[t][e],s=Math.floor(s/r),i[t]+=s*a,i[e]-=s*r*a),t)},null),D.reduce((e,t)=>{var r;return w(i[t])?e:(e&&(r=i[e]%1,i[e]-=r,i[t]+=r*n[e][t]),t)},null)}return this._clone(this,{values:e},!0)}plus(e){if(!this.isValid)return this;const t=j.fromDurationLike(e),r={};return D.forEach(e=>{void 0===t._values[e]&&void 0===this._values[e]||(r[e]=t.get(e)+this.get(e))}),this._clone(this,{values:r},!0)}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:r,matrix:s}={}){e=this._loc.clone({locale:e,numberingSystem:t});return this._clone(this,{loc:e,matrix:s,conversionAccuracy:r})}rescale(){var e;return this.isValid?([e={}]=[this.normalize().shiftToAll().toObject()],e=Object.entries(e).reduce((e,[t,r])=>(0!==r&&(e[t]=r),e),{}),this._clone(this,{values:e},!0)):this}set(e){return this.isValid?(e=Object.assign(Object.assign({},this._values),St(e,j.normalizeUnit)),this._clone(this,{values:e})):this}shiftTo(...t){if(!this.isValid||0===t.length)return this;t=t.map(e=>j.normalizeUnit(e));const s={},n={},i=this.toObject();let a;return D.forEach(r=>{if(0<=t.indexOf(r)){a=r;let t=0;Object.keys(n).forEach(e=>{t+=this._matrix[e][r]*n[e],n[e]=0}),O(i[r])&&(t+=i[r]);var e=Math.trunc(t);s[r]=e,n[r]=(1e3*t-1e3*e)/1e3}else O(i[r])&&(n[r]=i[r])}),Object.keys(n).forEach(e=>{var t=n[e];0!==t&&(s[a]+=e===a?t:t/this._matrix[a][e])}),this._clone(this,{values:s},!0).normalize()}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}toFormat(e,t={floor:!0}){t=Object.assign(Object.assign({},t),{floor:!1!==t.round&&!1!==t.floor});return this.isValid?I.create(this._loc,t).formatDurationFromString(this,e):j._INVALID}toHuman(r={}){if(!this.isValid)return j._INVALID;var e=this.getMaxUnit(!0),t=r.onlyHumanUnits?Mt:D;const s=this.shiftTo(...t.slice(t.indexOf(e))).toObject();e=t.map(e=>{var t=s[e];return w(t)||0===t?null:this._loc.numberFormatter(Object.assign(Object.assign({style:"unit",unitDisplay:"long"},r),{unit:e.slice(0,-1)})).format(t)}).filter(e=>e),t=Object.assign({type:"conjunction",style:r.listStyle||"narrow"},r);return this._loc.listFormatter(t).format(e)}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=ft(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){var t;return!this.isValid||(t=this.toMillis())<0||864e5<=t?null:(e=Object.assign(Object.assign({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},e),{includeOffset:!1}),W.fromMillis(t,{zone:"UTC"}).toISOTime(e))}toJSON(){return this.toISO()}toMillis(){return this.isValid?gr(this.matrix,this._values):NaN}toObject(){return this.isValid?Object.assign({},this._values):{}}toString(){return this.toISO()}valueOf(){return this.toMillis()}_clone(e,t,r=!1){r={values:r?t.values:Object.assign(Object.assign({},e._values),t.values||{}),loc:e._loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix};return new j(r)}}const _r="Invalid Interval";function vr(e){if(W.isDateTime(e))return e;if(e&&e.valueOf&&O(e.valueOf()))return W.fromJSDate(e);if(e&&"object"==typeof e)return W.fromObject(e);throw new u(`Unknown datetime argument: ${e}, of type `+typeof e)}class x{get end(){return this.isValid?this._e:null}get invalidReason(){return this._invalid?this._invalid.reason:null}get isValid(){return null===this.invalidReason}get start(){return this.isValid?this._s:null}constructor(e){this._s=e.start,this._e=e.end,this._invalid=e.invalid||null,this._isLuxonInterval=!0}static after(e,t){t=j.fromDurationLike(t),e=vr(e);return new x({start:e,end:e?e.plus(t):void 0})}static before(e,t){t=j.fromDurationLike(t),e=vr(e);return new x({start:e?e.minus(t):void 0,end:e})}static fromDateTimes(e,t){e=vr(e),t=vr(t);return function(e,t){if(e&&e.isValid){if(t&&t.isValid)return t<e?x.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=`+t.toISO()):void 0;return x.invalid("missing or invalid end")}return x.invalid("missing or invalid start")}(e,t)||new x({start:e,end:t})}static fromISO(e,n={}){var[i,a]=(e||"").split("/",2);if(i&&a){let e,t;try{e=W.fromISO(i,n),t=e.isValid}catch(a){t=!1}let r,s;try{r=W.fromISO(a,n),s=r.isValid}catch(a){s=!1}if(t&&s)return x.fromDateTimes(e,r);if(t){var o=j.fromISO(a,n);if(o.isValid)return x.after(e,o)}else if(s){o=j.fromISO(i,n);if(o.isValid)return x.before(r,o)}}return x.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t){if(!e)throw new u("need to specify a reason the Interval is invalid");e=e instanceof _?e:new _(e,t);if(g.throwOnInvalid)throw new z(e);return new x({invalid:e})}static isInterval(e){return!!e&&e._isLuxonInterval||!1}static merge(e){var[e,t]=e.sort((e,t)=>e._s.valueOf()-t._s.valueOf()).reduce(([e,t],r)=>t?t.overlaps(r)||t.abutsStart(r)?[e,t.union(r)]:[e.concat([t]),r]:[e,r],[[],null]);return t&&e.push(t),e}static xor(e){let t=null,r=0;var s=[],e=e.map(e=>[{time:e._s,type:"s"},{time:e._e,type:"e"}]);for(const n of Array.prototype.concat(...e).sort((e,t)=>+e.time-+t.time))r+="s"===n.type?1:-1,t=1===r?n.time:(t&&t.valueOf()!==n.time.valueOf()&&s.push(x.fromDateTimes(t,n.time)),null);return x.merge(s)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this._s.toISO()}, end: ${this._e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}abutsEnd(e){return+e._e==+this._s}abutsStart(e){return+this._e==+e._s}contains(e){return this._s<=e&&this._e>e}count(e="milliseconds",t){if(!this.isValid)return NaN;var r=this.start.startOf(e,t);let s;return s=(s=null!=t&&t.useLocaleWeeks?this.end.reconfigure({locale:r.locale}):this.end).startOf(e,t),Math.floor(s.diff(r,e).get(e))+ +(s.valueOf()!==this.end.valueOf())}difference(...e){return x.xor([this].concat(e)).map(e=>this.intersection(e)).filter(e=>e&&!e.isEmpty())}divideEqually(e){return this.isValid?this.splitBy({milliseconds:this.length()/e}).slice(0,e):[]}engulfs(e){return!!this.isValid&&this._s<=e._s&&this._e>=e._e}equals(e){return!(!this.isValid||!e.isValid)&&this._s.equals(e._s)&&this._e.equals(e._e)}hasSame(e){return!!this.isValid&&(this.isEmpty()||this._e.minus(1).hasSame(this._s,e))}intersection(e){var t;return this.isValid?(t=(this._s>e._s?this:e)._s,(e=(this._e<e._e?this:e)._e)<=t?null:x.fromDateTimes(t,e)):this}isAfter(e){return!!this.isValid&&this._s>e}isBefore(e){return!!this.isValid&&this._e<=e}isEmpty(){return this._s.valueOf()===this._e.valueOf()}length(e="milliseconds"){return this.toDuration(e).get(e)}mapEndpoints(e){return x.fromDateTimes(e(this._s),e(this._e))}overlaps(e){return this._e>e._s&&this._s<e._e}set({start:e,end:t}={}){return this.isValid?x.fromDateTimes(e||this._s,t||this._e):this}splitAt(...e){var t=e.map(vr).filter(e=>this.contains(e)).sort((e,t)=>e.toMillis()-t.toMillis()),r=[];let s=this._s,n=0;for(;s<this._e;){var i=t[n]||this._e,i=+i>+this._e?this._e:i;r.push(x.fromDateTimes(s,i)),s=i,n+=1}return r}splitBy(e){var t=j.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let r=this._s,s=1,n;for(var i=[];r<this._e;){var a=this.start.plus(t.mapUnits(e=>e*s));n=+a>+this._e?this._e:a,i.push(x.fromDateTimes(r,n)),r=n,s+=1}return i}toDuration(e="milliseconds",t={}){return this.isValid?this._e.diff(this._s,e,t):j.invalid(this._invalid.reason)}toFormat(e,{separator:t=" - "}={}){return this.isValid?""+this._s.toFormat(e)+t+this._e.toFormat(e):_r}toISO(e={}){return this.isValid?this._s.toISO(e)+"/"+this._e.toISO(e):_r}toISODate(){return this.isValid?this._s.toISODate()+"/"+this._e.toISODate():_r}toISOTime(e={}){return this.isValid?this._s.toISOTime(e)+"/"+this._e.toISOTime(e):_r}toLocaleString(e=P,t={}){return this.isValid?I.create(this._s.loc.clone(t),e).formatInterval(this):_r}toString(){return this.isValid?`[${this._s.toISO()} – ${this._e.toISO()})`:_r}union(e){var t;return this.isValid?(t=(this._s<e._s?this:e)._s,e=(this._e>e._e?this:e)._e,x.fromDateTimes(t,e)):this}}class pr{static eras(e="short",{locale:t}={}){return d.create(t,void 0,"gregory").eras(e)}static features(){return{relative:lt(),localeWeek:ct()}}static getMinimumDaysInFirstWeek({locale:e,locObj:t}={}){return(t||d.create(e)).getMinDaysInFirstWeek()}static getStartOfWeek({locale:e,locObj:t}={}){return(t||d.create(e)).getStartOfWeek()}static getWeekendWeekdays({locale:e,locObj:t}={}){return(t||d.create(e)).getWeekendDays().slice()}static hasDST(e=g.defaultZone){var t=W.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return a.isValidZone(e)}static meridiems({locale:e}={}){return d.create(e).meridiems()}static months(e="long",{locale:t=null,locObj:r=null,numberingSystem:s=null,outputCalendar:n="gregory"}={}){return(r||d.create(t,s,n)).months(e)}static monthsFormat(e="long",{locale:t,locObj:r,numberingSystem:s,outputCalendar:n="gregory"}={}){return(r||d.create(t,s,n)).months(e,!0)}static normalizeZone(e){return f(e,g.defaultZone)}static weekdays(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||d.create(t,s)).weekdays(e)}static weekdaysFormat(e="long",{locale:t,locObj:r,numberingSystem:s}={}){return(r||d.create(t,s)).weekdays(e,!0)}}function wr(e,t){var r=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("days").valueOf(),t=r(t)-r(e);return Math.floor(j.fromMillis(t).as("days"))}const Or=(e,t,r,s)=>{let[n,i,a,o]=function(e,t,r){var s,n,i={},a=e;let o,u;for([s,n]of[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>{e=wr(e,t);return(e-e%7)/7}],["days",wr]])0<=r.indexOf(s)&&(i[o=s]=n(e,t),(u=a.plus(i))>t?(i[s]--,t<(e=a.plus(i))&&(u=e,i[s]--,e=a.plus(i))):e=u);return[e,i,u,o]}(e,t,r);e=+t-+n,r=r.filter(e=>0<=["hours","minutes","seconds","milliseconds"].indexOf(e)),0===r.length&&(a=a<t?n.plus({[o]:1}):a)!==n&&(i[o]=(i[o]||0)+e/(+a-+n)),t=j.fromObject(i,s);return 0<r.length?j.fromMillis(e,s).shiftTo(...r).plus(t):t};function V(e,t=e=>e){return{regex:e,deser:([e])=>t(function(t){var e=parseInt(t,10);if(!isNaN(e))return e;let r="";for(let e=0;e<t.length;e++){var s=t.charCodeAt(e);if(-1!==t[e].search(ze.hanidec))r+=qe.indexOf(t[e]);else for(const a in Le){var[n,i]=Le[a];if(n<=s&&s<=i){r+=s-n;break}}}return parseInt(r,10)}(e))}}const kr=`[ ${String.fromCharCode(160)}]`,br=new RegExp(kr,"g");function Sr(e){return e.replace(/\./g,"\\.?").replace(br,kr)}function Tr(e){return e.replace(/\./g,"").replace(br," ").toLowerCase()}function C(e,r){return{regex:RegExp(e.map(Sr).join("|")),deser:([t])=>e.findIndex(e=>Tr(t)===Tr(e))+r}}function Nr(e,t){return{regex:e,deser:([,e,t])=>kt(e,t),groups:t}}function Dr(e){return{regex:e,deser:([e])=>e}}const Mr={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let Ir;function Er(e,r){return Array.prototype.concat(...e.map(e=>{return t=r,(e=e).literal||null==(t=Cr(I.macroTokenToFormatOpts(e.val),t))||t.includes(void 0)?e:t;var t}))}class jr{get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null}get isValid(){return!this.disqualifyingUnit}constructor(e,t){this.locale=e,this.format=t,this._mapTokens()}explainFromTokens(e){if(this.isValid){var[t,r]=function(e,t,s){const n=t.exec(e),i={};if(null!==n){let r=1;s.forEach(e=>{var t=e.groups?e.groups+1:1;e.literal||(i[e.token.val[0]]=e.deser(n.slice(r,r+t))),r+=t})}return[n,i]}(e,this.regex,this.handlers),[s,n,i]=r?function(s){let e=null,t;return p(s.z)&&(e=a.create(s.z)),p(s.Z)&&(e=e||new m(+s.Z),t=+s.Z),p(s.q)&&(s.M=3*(s.q-1)+1),p(s.h)&&(+s.h<12&&1===s.a?s.h=s.h+12:12===s.h&&0===s.a&&(s.h=0)),0===s.G&&s.y&&(s.y=-s.y),p(s.u)&&(s.S=mt(s.u)||0),[Object.keys(s).reduce((e,t)=>{var r=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(t);return r&&(e[r]=s[t]),e},{}),e,t]}(r):[null,null,void 0];if(r.hasOwnProperty("a")&&r.hasOwnProperty("H"))throw new h("Can't include meridiem when specifying 24-hour format");return{input:e,tokens:this.tokens,regex:this.regex,rawMatches:t,matches:r,result:s,zone:n,specificOffset:i}}return{input:e,tokens:this.tokens,invalidReason:this.invalidReason}}_mapTokens(){this.tokens=Er(I.parseFormat(this.format),this.locale);var e,t=this.tokens.map(e=>{{var t=e,r=this.locale;const s=y(r),n=y(r,"{2}"),i=y(r,"{3}"),a=y(r,"{4}"),o=y(r,"{6}"),u=y(r,"{1,2}"),l=y(r,"{1,3}"),c=y(r,"{1,6}"),h=y(r,"{1,9}"),d=y(r,"{2,4}"),m=y(r,"{4,6}"),f=e=>({regex:RegExp(e.val.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")),deser:([e])=>e,literal:!0});return e=(e=>{if(t.literal)return f(e);switch(e.val){case"G":return C(r.eras("short"),0);case"GG":return C(r.eras("long"),0);case"y":return V(c);case"yy":return V(d,wt);case"yyyy":return V(a);case"yyyyy":return V(m);case"yyyyyy":return V(o);case"M":return V(u);case"MM":return V(n);case"MMM":return C(r.months("short",!0),1);case"MMMM":return C(r.months("long",!0),1);case"L":return V(u);case"LL":return V(n);case"LLL":return C(r.months("short",!1),1);case"LLLL":return C(r.months("long",!1),1);case"d":return V(u);case"dd":return V(n);case"o":return V(l);case"ooo":return V(i);case"HH":return V(n);case"H":return V(u);case"hh":return V(n);case"h":return V(u);case"mm":return V(n);case"m":case"q":return V(u);case"qq":return V(n);case"s":return V(u);case"ss":return V(n);case"S":return V(l);case"SSS":return V(i);case"u":return Dr(h);case"a":return C(r.meridiems(),0);case"kkkk":return V(a);case"kk":return V(d,wt);case"W":return V(u);case"WW":return V(n);case"E":case"c":return V(s);case"EEE":return C(r.weekdays("short",!1),1);case"EEEE":return C(r.weekdays("long",!1),1);case"ccc":return C(r.weekdays("short",!0),1);case"cccc":return C(r.weekdays("long",!0),1);case"Z":case"ZZ":return Nr(new RegExp(`([+-]${u.source})(?::(${n.source}))?`),2);case"ZZZ":return Nr(new RegExp(`([+-]${u.source})(${n.source})?`),2);case"z":return Dr(/[a-z_+-/]{1,256}?/i);default:return f(e)}})(t)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"},Object.assign(Object.assign({},e),{token:t})}});this.disqualifyingUnit=t.find(e=>e.invalidReason),this.units=t.filter(e=>!e.invalidReason),this.disqualifyingUnit||([t,e]=[`^${(t=this.units).map(e=>e.regex).reduce((e,t)=>`${e}(${t.source})`,"")}$`,t],this.regex=RegExp(t,"i"),this.handlers=e)}}function xr(e,t,r){return new jr(e,r).explainFromTokens(t)}function Vr(e){return e.replace(/\u202F/g," ")}function Cr(o,e){if(!o)return null;var e=I.create(e,o).dtFormatter((e=e,Ir=void 0===Ir?W.fromMillis(1555555555555,{locale:e.locale}):Ir)),t=e.formatToParts();const u=e.resolvedOptions();return t.map(r=>{{var s=o,n=u,{type:r,value:i}=r;if("literal"===r)return{literal:!(a=/^\s+$/.test(i)),val:a?" ":i};var a=s[r];let e=r,t=("hour"===r&&(e=null!=s.hour12?s.hour12?"hour12":"hour24":null!=s.hourCycle?"h11"===s.hourCycle||"h12"===s.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24"),Mr[e]);return(t="object"==typeof t?t[a]:t)?{literal:!1,val:t}:void 0}})}const Wr="Invalid DateTime";function Fr(e,t,r){var s=e-60*t*1e3,n=r.offset(s);return t===n?[s,t]:n===(r=r.offset(s-=60*(n-t)*1e3))?[s,n]:[e-60*Math.min(n,r)*1e3,Math.max(n,r)]}function Zr(e,t){e+=60*t*1e3;t=new Date(e);return{year:t.getUTCFullYear(),month:t.getUTCMonth()+1,day:t.getUTCDate(),hour:t.getUTCHours(),minute:t.getUTCMinutes(),second:t.getUTCSeconds(),millisecond:t.getUTCMilliseconds()}}function zr(e,t,r){return Fr(_t(e),t,r)}function Lr(e,t,r,s,n,i){var{setZone:a,zone:o}=r;return e&&0!==Object.keys(e).length||t?(t=t||o,e=W.fromObject(e||void 0,Object.assign(Object.assign({},r),{zone:t,specificOffset:i})),a?e:e.setZone(o)):W.invalid(new _("unparsable",`the input "${n}" can't be parsed as `+s))}function qr(e,t,r=!0){return e.isValid?I.create(d.create("en-US"),{allowZ:r,forceSimple:!0}).formatDateTimeFromString(e,t):null}const Ar={year:0,month:1,day:1,hour:0,minute:0,second:0,millisecond:0},Ur={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},$r={ordinal:1,hour:0,minute:0,second:0,millisecond:0},Rr=["year","month","day","hour","minute","second","millisecond"],Pr=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],Yr=["year","ordinal","hour","minute","second","millisecond"];function Hr(e){var t=It[e.toLowerCase()];if(t)return t;throw new L(e)}class W{get day(){return this.isValid?this._c.day:NaN}get daysInMonth(){return gt(this.year,this.month)}get daysInYear(){return this.isValid?N(this.year):NaN}get hour(){return this.isValid?this._c.hour:NaN}get invalidExplanation(){return this._invalid?this._invalid.explanation:void 0}get invalidReason(){return this._invalid?this._invalid.reason:void 0}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}get isInLeapYear(){return yt(this.year)}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isValid(){return null===this._invalid}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get loc(){return this.isValid?this._loc.clone():void 0}get localWeekNumber(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekNumber:NaN}get localWeekYear(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekYear:NaN}get localWeekday(){return this.isValid?this._possiblyCachedLocalWeekData(this).weekday:NaN}get locale(){return this.isValid?this._loc.locale:void 0}get millisecond(){return this.isValid?this._c.millisecond:NaN}get minute(){return this.isValid?this._c.minute:NaN}get month(){return this.isValid?this._c.month:NaN}get monthLong(){return this.isValid?pr.months("long",{locObj:this._loc})[this.month-1]:null}get monthShort(){return this.isValid?pr.months("short",{locObj:this._loc})[this.month-1]:null}get numberingSystem(){return this.isValid?this._loc.numberingSystem:void 0}get offset(){return this.isValid?+this._o:NaN}get offsetNameLong(){return this.isValid?this.zone.offsetName(this._ts,{format:"long",locale:this.locale}):null}get offsetNameShort(){return this.isValid?this.zone.offsetName(this._ts,{format:"short",locale:this.locale}):null}get ordinal(){return this.isValid?rt(this._c).ordinal:NaN}get outputCalendar(){return this.isValid?this._loc.outputCalendar:void 0}get quarter(){return this.isValid?Math.ceil(this._c.month/3):NaN}get second(){return this.isValid?this._c.second:NaN}get ts(){return this._ts}get weekNumber(){return this.isValid?this._possiblyCachedWeekData(this).weekNumber:NaN}get weekYear(){return this.isValid?this._possiblyCachedWeekData(this).weekYear:NaN}get weekday(){return this.isValid?this._possiblyCachedWeekData(this).weekday:NaN}get weekdayLong(){return this.isValid?pr.weekdays("long",{locObj:this._loc})[this.weekday-1]:null}get weekdayShort(){return this.isValid?pr.weekdays("short",{locObj:this._loc})[this.weekday-1]:null}get weeksInLocalWeekYear(){return this.isValid?pt(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}get weeksInWeekYear(){return this.isValid?pt(this.weekYear):NaN}get year(){return this.isValid?this._c.year:NaN}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}constructor(e){var t,r=e.zone||g.defaultZone;let s=e.invalid||(Number.isNaN(e.ts)?new _("invalid timestamp"):null)||(r.isValid?null:W._unsupportedZone(r));this._ts=w(e.ts)?g.now():e.ts;let n,i;s||(!!e.old&&e.old.ts===this._ts&&e.old.zone.equals(r)?[i,n]=[e.old.c,e.old.o]:(t=O(e.o)&&!e.old?e.o:r.offset(this.ts),i=Zr(this._ts,t),s=Number.isNaN(i.year)?new _("invalid input"):null,i=s?void 0:i,n=s?void 0:t)),this._zone=r,this._loc=e.loc||d.create(),this._invalid=s,this._weekData=null,this._c=i,this._o=n,this._isLuxonDateTime=!0}static buildFormatParser(e,t={}){var{locale:t=null,numberingSystem:r=null}=t,t=d.fromOpts({locale:t,numberingSystem:r,defaultToEN:!0});return new jr(t,e)}static expandFormat(e,t={}){return Er(I.parseFormat(e),d.fromObject(t)).map(e=>e.val).join("")}static fromFormat(e,t,r={}){if(w(e)||w(t))throw new u("fromFormat requires an input string and a format");var{locale:s,numberingSystem:n}=r,[s,n,i,a]=function(e,t,r){var{result:e,zone:t,specificOffset:r,invalidReason:s}=xr(e,Vr(t),Vr(r));return[e,t,r,s]}(d.fromOpts({locale:s,numberingSystem:n,defaultToEN:!0}),e,t);return a?W.invalid(a):Lr(s,n||null,r,"format "+t,e,i)}static fromFormatExplain(e,t,r={}){var{locale:r,numberingSystem:s}=r;return xr(d.fromOpts({locale:r,numberingSystem:s,defaultToEN:!0}),e,t)}static fromFormatParser(e,t,r={}){if(w(e)||w(t))throw new u("fromFormatParser requires an input string and a format parser");var s,n,i,{locale:a=null,numberingSystem:o=null}=r,a=d.fromOpts({locale:a,numberingSystem:o,defaultToEN:!0});if(a.equals(t.locale))return{result:o,zone:s,specificOffset:n,invalidReason:i}=t.explainFromTokens(e),i?W.invalid(i):Lr(o,s,r,"format "+t.format,e,n);throw new u(`fromFormatParser called with a locale of ${a}, `+"but the format parser was created for "+t.locale)}static fromHTTP(e,t={}){var[r,s]=Ct(e,[Kt,tr],[Xt,tr],[er,rr]);return Lr(r,s,t,"HTTP",e)}static fromISO(e,t={}){var[r,s]=Ct(e,[sr,or],[nr,ur],[ir,lr],[ar,cr]);return Lr(r,s,t,"ISO 8601",e)}static fromJSDate(e,t={}){var r,e="[object Date]"===Object.prototype.toString.call(e)?e.valueOf():NaN;return Number.isNaN(e)?W.invalid("invalid input"):(r=f(t.zone,g.defaultZone)).isValid?new W({ts:e,zone:r,loc:d.fromObject(t)}):W.invalid(W._unsupportedZone(r))}static fromMillis(e,t={}){if(O(e))return e<-864e13||864e13<e?W.invalid("Timestamp out of range"):new W({ts:e,zone:f(t.zone,g.defaultZone),loc:d.fromObject(t)});throw new u(`fromMillis requires a numerical input, but received a ${typeof e} with value `+e)}static fromObject(e={},t={}){var r=f(t.zone,g.defaultZone);if(!r.isValid)return W.invalid(W._unsupportedZone(r));var s=d.fromObject(t),n=St(e,Hr),i=g.now(),t=O(t.specificOffset)?t.specificOffset:r.offset(i),a=p(n.ordinal),o=p(n.year),u=p(n.month)||p(n.day),o=o||u,l=n.weekYear||n.weekNumber;if((o||a)&&l)throw new h("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(u&&a)throw new h("Can't mix ordinal dates with month/day");var u=l||n.weekday&&!o,{minDaysInFirstWeek:l,startOfWeek:c}=ot(n,s),i=Zr(i,t),o={containsGregor:o,containsOrdinal:a,loc:s,normalized:n,obj:e,offsetProvis:t,useWeekData:u,zoneToUse:r};return u?W._buildObject(o,Pr,Ur,et(i,l,c)):a?W._buildObject(o,Yr,$r,rt(i)):W._buildObject(o,Rr,Ar,i)}static fromRFC2822(e,t={}){var[r,s]=Ct(e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim(),[Bt,Qt]);return Lr(r,s,t,"RFC 2822",e)}static fromSQL(e,t={}){var[r,s]=Ct(e,[hr,or],[dr,mr]);return Lr(r,s,t,"SQL",e)}static fromSeconds(e,t={}){if(O(e))return new W({ts:1e3*e,zone:f(t.zone,g.defaultZone),loc:d.fromObject(t)});throw new u("fromSeconds requires a numerical input")}static fromString(e,t,r={}){return W.fromFormat(e,t,r)}static fromStringExplain(e,t,r={}){return W.fromFormatExplain(e,t,r)}static invalid(e,t){if(!e)throw new u("need to specify a reason the DateTime is invalid");e=e instanceof _?e:new _(e,t);if(g.throwOnInvalid)throw new F(e);return new W({invalid:e})}static isDateTime(e){return!(!e||!e._isLuxonDateTime)}static local(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return W._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static max(...e){if(e.every(W.isDateTime))return ht(e,e=>e.valueOf(),Math.max);throw new u("max requires all arguments be DateTimes")}static min(...e){if(e.every(W.isDateTime))return ht(e,e=>e.valueOf(),Math.min);throw new u("min requires all arguments be DateTimes")}static now(){return new W({})}static parseFormatForOpts(e,t={}){e=Cr(e,d.fromObject(t));return e?e.map(e=>e?e.val:null).join(""):null}static resetCache(){this._zoneOffsetTs=void 0,this._zoneOffsetGuessCache=new Map}static utc(...e){var[e,t]=this._lastOpts(e),[t,r,s,n,i,a,o]=t;return e.zone=m.utcInstance,this._quickDT({year:t,month:r,day:s,hour:n,minute:i,second:a,millisecond:o},e)}static _buildObject(t,e,r,s){let n=!1;e.forEach(e=>{p(t.normalized[e])?n=!0:n?t.normalized[e]=r[e]:t.normalized[e]=s[e]});var i,a,o,u,e=(t.useWeekData?(e=t.normalized,i=4,a=1,o=ut(e.weekYear),i=k(e.weekNumber,1,pt(e.weekYear,i,a)),a=k(e.weekday,1,7),o?i?!a&&v("weekday",e.weekday):v("week",e.weekNumber):v("weekYear",e.weekYear)):t.containsOrdinal?(o=t.normalized,i=ut(o.year),a=k(o.ordinal,1,N(o.year)),i?!a&&v("ordinal",o.ordinal):v("year",o.year)):nt(t.normalized))||it(t.normalized);return e?W.invalid(e):([e,u]=zr(t.useWeekData?tt(t.normalized):t.containsOrdinal?st(t.normalized):t.normalized,t.offsetProvis,t.zoneToUse),e=new W({ts:e,zone:t.zoneToUse,o:u,loc:t.loc}),t.normalized.weekday&&t.containsGregor&&t.obj.weekday!==e.weekday?W.invalid("mismatched weekday",`you can't specify both a weekday of ${t.normalized.weekday} and a date of `+e.toISO()):e.isValid?e:W.invalid(e._invalid))}static _diffRelative(t,r,s){const n=!!w(s.round)||s.round,e=(e,t)=>{return e=ft(e,n||s.calendary?0:2,!0),r._loc.clone(s).relFormatter(s).format(e,t)},i=e=>s.calendary?r.hasSame(t,e)?0:r.startOf(e).diff(t.startOf(e),e).get(e):r.diff(t,e).get(e);if(s.unit)return e(i(s.unit),s.unit);for(const o of s.units){var a=i(o);if(1<=Math.abs(a))return e(a,o)}return e(r<t?-0:0,s.units[s.units.length-1])}static _guessOffsetForZone(e){return this._zoneOffsetGuessCache.has(e)||(void 0===this._zoneOffsetTs&&(this._zoneOffsetTs=g.now()),this._zoneOffsetGuessCache.set(e,e.offset(this._zoneOffsetTs))),this._zoneOffsetGuessCache.get(e)}static _lastOpts(e){let t={},r;return r=0<e.length&&"object"==typeof e[e.length-1]?(t=e.pop(),e):Array.from(e),[t,r]}static _quickDT(e,t){var r=f(t.zone,g.defaultZone);if(!r.isValid)return W.invalid(this._unsupportedZone(r));var t=d.fromObject(t),s=g.now();let n,i;if(p(e.year)){for(const o of Rr)w(e[o])&&(e[o]=Ar[o]);var a=nt(e)||it(e);if(a)return W.invalid(a);a=this._guessOffsetForZone(r);[n,i]=zr(e,a,r)}else n=s;return new W({ts:n,zone:r,loc:t,o:i})}static _unsupportedZone(e){return new _("unsupported zone",`the zone "${e.name}" is not supported`)}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}diff(e,t="milliseconds",r={}){var s,n,i;return this.isValid&&e.isValid?(t=t,t=(Array.isArray(t)?t:[t]).map(j.normalizeUnit),i=(s=e.valueOf()>this.valueOf())?this:e,n=s?e:this,i=Or(i,n,t,Object.assign({locale:this.locale,numberingSystem:this.numberingSystem},r)),s?i.negate():i):(n=this.invalidReason||e.invalidReason,j.invalid(n,"created by diffing an invalid DateTime"))}diffNow(e="milliseconds",t={}){return this.diff(W.now(),e,t)}endOf(e,{useLocaleWeeks:t=!1}={}){return this.plus({[e]:1}).startOf(e,{useLocaleWeeks:t}).minus({milliseconds:1})}equals(e){return this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this._loc.equals(e._loc)}get(e){return this[e]}getPossibleOffsets(){var e,t,r,s;return this.isValid&&!this.isOffsetFixed&&(e=_t(this._c),r=this.zone.offset(e-864e5),s=this.zone.offset(e+864e5),(r=this.zone.offset(e-6e4*r))!==(s=this.zone.offset(e-6e4*s)))&&(t=e-6e4*s,r=Zr(e=e-6e4*r,r),s=Zr(t,s),r.hour===s.hour)&&r.minute===s.minute&&r.second===s.second&&r.millisecond===s.millisecond?[this._clone({ts:e}),this._clone({ts:t})]:[this]}hasSame(e,t,r){var s;return!!this.isValid&&(s=e.valueOf(),+(e=this.setZone(e.zone,{keepLocalTime:!0})).startOf(t)<=s)&&s<=+e.endOf(t,r)}minus(e){return this.isValid?(e=j.fromDurationLike(e).negate(),this._clone(this._adjustTime(e))):this}plus(e){return this.isValid?(e=j.fromDurationLike(e),this._clone(this._adjustTime(e))):this}reconfigure(e){e=this._loc.clone(e);return this._clone({loc:e})}resolvedLocaleOptions(e={}){var{locale:e,numberingSystem:t,calendar:r}=I.create(this._loc.clone(e),e).resolvedOptions(this);return{locale:e,numberingSystem:t,outputCalendar:r}}set(e){if(!this.isValid)return this;var e=St(e,Hr),{minDaysInFirstWeek:t,startOfWeek:r}=ot(e,this.loc),s=p(e.weekYear)||p(e.weekNumber)||p(e.weekday),n=p(e.ordinal),i=p(e.year),a=p(e.month)||p(e.day),o=e.weekYear||e.weekNumber;if((i||a||n)&&o)throw new h("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(a&&n)throw new h("Can't mix ordinal dates with month/day");let u;s?u=tt(Object.assign(Object.assign({},et(this._c,t,r)),e),t,r):w(e.ordinal)?(u=Object.assign(Object.assign({},this.toObject()),e),w(e.day)&&(u.day=Math.min(gt(u.year,u.month),u.day))):u=st(Object.assign(Object.assign({},rt(this._c)),e));var[i,o]=zr(u,this._o,this.zone);return this._clone({ts:i,o:o})}setLocale(e){return this.reconfigure({locale:e})}setZone(t,{keepLocalTime:r=!1,keepCalendarTime:s=!1}={}){if((t=f(t,g.defaultZone)).equals(this.zone))return this;if(t.isValid){let e=this._ts;return(r||s)&&(r=t.offset(this._ts),s=this.toObject(),e=zr(s,r,t)[0]),this._clone({ts:e,zone:t})}return W.invalid(W._unsupportedZone(t))}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;var r,s={},e=j.normalizeUnit(e);switch(e){case"years":s.month=1;case"quarters":case"months":s.day=1;case"weeks":case"days":s.hour=0;case"hours":s.minute=0;case"minutes":s.second=0;case"seconds":s.millisecond=0}return"weeks"===e&&(t?(t=this.loc.getStartOfWeek(),r=this["weekday"],r<t&&(s.weekNumber=this.weekNumber-1),s.weekday=t):s.weekday=1),"quarters"===e&&(r=Math.ceil(this.month/3),s.month=3*(r-1)+1),this.set(s)}toBSON(){return this.toJSDate()}toFormat(e,t={}){return this.isValid?I.create(this._loc.redefaultToEN(t)).formatDateTimeFromString(this,e):Wr}toHTTP(){return qr(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:r=!1,includeOffset:s=!0,extendedZone:n=!1}={}){return this.isValid?[this._toISODate(e="extended"===e),"T",this._toISOTime(e,t,r,s,n)].join(""):null}toISODate({format:e="extended"}={format:"extended"}){return this.isValid?this._toISODate("extended"===e):null}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:r=!0,includePrefix:s=!1,extendedZone:n=!1,format:i="extended"}={}){return this.isValid?[s?"T":"",this._toISOTime("extended"===i,t,e,r,n)].join(""):null}toISOWeekDate(){return qr(this,"kkkk-'W'WW-c")}toJSDate(){return new Date(this.isValid?this._ts:NaN)}toJSON(){return this.toISO()}toLocal(){return this.setZone(g.defaultZone)}toLocaleParts(e={}){return this.isValid?I.create(this._loc.clone(e),e).formatDateTimeParts(this):[]}toLocaleString(e=P,t={}){return this.isValid?I.create(this._loc.clone(t),e).formatDateTime(this):Wr}toMillis(){return this.isValid?this.ts:NaN}toObject(e={includeConfig:!1}){var t;return this.isValid?(t=Object.assign({},this._c),e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this._loc.numberingSystem,t.locale=this._loc.locale),t):{}}toRFC2822(){return qr(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toRelative(e={}){if(!this.isValid)return null;var t=e.base||W.fromObject({},{zone:this.zone}),r=e.padding?this<t?-e.padding:e.padding:0;let s=["years","months","days","hours","minutes","seconds"],n=e.unit;return Array.isArray(e.unit)&&(s=e.unit,n=void 0),W._diffRelative(t,this.plus(r),Object.assign(Object.assign({},e),{numeric:"always",units:s,unit:n}))}toRelativeCalendar(e={}){return this.isValid?W._diffRelative(e.base||W.fromObject({},{zone:this.zone}),this,Object.assign(Object.assign({},e),{numeric:"auto",units:["years","months","days"],calendary:!0})):null}toSQL(e={}){return this.isValid?this.toSQLDate()+" "+this.toSQLTime(e):null}toSQLDate(){return this.isValid?this._toISODate(!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:r=!0}={}){let s="HH:mm:ss.SSS";return(t||e)&&(r&&(s+=" "),t?s+="z":e&&(s+="ZZ")),qr(this,s,!0)}toSeconds(){return this.isValid?this._ts/1e3:NaN}toString(){return this.isValid?this.toISO():Wr}toUTC(e=0,t={}){return this.setZone(m.instance(e),t)}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}until(e){return x.fromDateTimes(this,e)}valueOf(){return this.toMillis()}_adjustTime(e){var t=this._o,r=this._c.year+Math.trunc(e.years),s=this._c.month+Math.trunc(e.months)+3*Math.trunc(e.quarters),r=Object.assign(Object.assign({},this._c),{year:r,month:s,day:Math.min(this._c.day,gt(r,s))+Math.trunc(e.days)+7*Math.trunc(e.weeks)}),s=j.fromObject({years:e.years-Math.trunc(e.years),quarters:e.quarters-Math.trunc(e.quarters),months:e.months-Math.trunc(e.months),weeks:e.weeks-Math.trunc(e.weeks),days:e.days-Math.trunc(e.days),hours:e.hours,minutes:e.minutes,seconds:e.seconds,milliseconds:e.milliseconds}).as("milliseconds");let[n,i]=Fr(_t(r),t,this.zone);return 0!==s&&(n+=s,i=this.zone.offset(n)),{ts:n,o:i}}_clone(e){var t={ts:this._ts,zone:this.zone,c:this._c,o:this._o,loc:this._loc,invalid:this._invalid||void 0};return new W(Object.assign(Object.assign(Object.assign({},t),e),{old:t}))}_possiblyCachedLocalWeekData(e){return e._localWeekData||(e._localWeekData=et(e._c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e._localWeekData}_possiblyCachedWeekData(e){return null===e._weekData&&(e._weekData=et(e._c)),e._weekData}_toISODate(e){var t=9999<this._c.year||this._c.year<0;let r="";return t&&0<=this._c.year&&(r+="+"),r+=b(this._c.year,t?6:4),r=e?(r=(r+="-")+b(this._c.month)+"-")+b(this._c.day):(r+=b(this._c.month))+b(this._c.day)}_toISOTime(e,t,r,s,n){let i=b(this._c.hour);return e?(i=(i+=":")+b(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=":")):i+=b(this._c.minute),0===this._c.millisecond&&0===this._c.second&&t||(i+=b(this._c.second),0===this._c.millisecond&&r)||(i=(i+=".")+b(this._c.millisecond,3)),s&&(this.isOffsetFixed&&0===this.offset&&!n?i+="Z":i=this._o<0?(i=(i+="-")+b(Math.trunc(-this._o/60))+":")+b(Math.trunc(-this._o%60)):(i=(i+="+")+b(Math.trunc(this._o/60))+":")+b(Math.trunc(this._o%60))),n&&(i+="["+this.zone.ianaName+"]"),i}}W.DATETIME_FULL=le,W.DATETIME_FULL_WITH_SECONDS=i,W.DATETIME_HUGE=ce,W.DATETIME_HUGE_WITH_SECONDS=n,W.DATETIME_MED=ae,W.DATETIME_MED_WITH_SECONDS=oe,W.DATETIME_MED_WITH_WEEKDAY=ue,W.DATETIME_SHORT=ne,W.DATETIME_SHORT_WITH_SECONDS=ie,W.DATE_FULL=J,W.DATE_HUGE=G,W.DATE_MED=Y,W.DATE_MED_WITH_WEEKDAY=H,W.DATE_SHORT=P,W.TIME_24_SIMPLE=ee,W.TIME_24_WITH_LONG_OFFSET=se,W.TIME_24_WITH_SECONDS=te,W.TIME_24_WITH_SHORT_OFFSET=re,W.TIME_SIMPLE=B,W.TIME_WITH_LONG_OFFSET=X,W.TIME_WITH_SECONDS=Q,W.TIME_WITH_SHORT_OFFSET=K,W._zoneOffsetGuessCache=new Map;e.DateTime=W,e.Duration=j,e.FixedOffsetZone=m,e.IANAZone=a,e.Info=pr,e.Interval=x,e.Intl=c,e.InvalidZone=We,e.ORDERED_UNITS=D,e.REVERSE_ORDERED_UNITS=Dt,e.Settings=g,e.SystemZone=Ze,e.VERSION="4.6.2",e.Zone=s});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
