"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageId = void 0;
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
var utils_1 = require("../../utils");
exports.messageId = 'useEffectsLifecycleInterface';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        ngrxModule: 'effects',
        docs: {
            description: 'Ensures classes implement lifecycle interfaces corresponding to the declared lifecycle methods.',
            recommended: 'warn',
        },
        fixable: 'code',
        schema: [],
        messages: (_a = {},
            _a[exports.messageId] = 'Lifecycle interface `{{ interfaceName }}` should be implemented for method `{{ methodName }}`.',
            _a),
    },
    defaultOptions: [],
    create: function (context) {
        var _a;
        var lifecycleMapper = {
            ngrxOnIdentifyEffects: 'OnIdentifyEffects',
            ngrxOnInitEffects: 'OnInitEffects',
            ngrxOnRunEffects: 'OnRunEffects',
        };
        var lifecyclesPattern = Object.keys(lifecycleMapper).join('|');
        return _a = {},
            _a["ClassDeclaration > ClassBody > MethodDefinition > Identifier[name=/".concat(lifecyclesPattern, "/]")] = function (node) {
                var classDeclaration = node.parent.parent.parent;
                var methodName = node.name;
                var interfaceName = lifecycleMapper[methodName];
                if ((0, utils_1.getInterface)(classDeclaration, interfaceName)) {
                    return;
                }
                context.report({
                    fix: function (fixer) {
                        var _a = (0, utils_1.getImplementsSchemaFixer)(classDeclaration, interfaceName), implementsNodeReplace = _a.implementsNodeReplace, implementsTextReplace = _a.implementsTextReplace;
                        return [
                            fixer.insertTextAfter(implementsNodeReplace, implementsTextReplace),
                        ].concat((0, utils_1.getImportAddFix)({
                            compatibleWithTypeOnlyImport: true,
                            fixer: fixer,
                            importName: interfaceName,
                            moduleName: utils_1.NGRX_MODULE_PATHS.effects,
                            node: classDeclaration,
                        }));
                    },
                    node: node,
                    messageId: exports.messageId,
                    data: {
                        interfaceName: interfaceName,
                        methodName: methodName,
                    },
                });
            },
            _a;
    },
});
//# sourceMappingURL=use-effects-lifecycle-interface.js.map