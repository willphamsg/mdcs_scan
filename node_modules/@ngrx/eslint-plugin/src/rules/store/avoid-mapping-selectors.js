"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageId = void 0;
var eslint_etc_1 = require("eslint-etc");
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
var utils_1 = require("../../utils");
exports.messageId = 'avoidMapppingSelectors';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        ngrxModule: 'store',
        docs: {
            description: 'Avoid mapping logic outside the selector level.',
            recommended: 'warn',
        },
        schema: [],
        messages: (_a = {},
            _a[exports.messageId] = 'Map logic at the selector level instead.',
            _a),
    },
    defaultOptions: [],
    create: function (context) {
        var _a;
        var _b = (0, utils_1.getNgRxStores)(context).identifiers, identifiers = _b === void 0 ? [] : _b;
        var storeNames = identifiers.length > 0 ? (0, utils_1.asPattern)(identifiers) : null;
        if (!storeNames) {
            return {};
        }
        var pipeWithSelectAndMapSelector = "".concat((0, utils_1.pipeExpression)(storeNames), ":has(CallExpression[callee.name='select'] ~ CallExpression[callee.name='map'])");
        var selectSelector = "".concat((0, utils_1.namedCallableExpression)(storeNames), "[callee.object.callee.property.name='select']");
        function isInCreateEffect(node) {
            var parent = node.parent;
            while (parent) {
                if ((0, eslint_etc_1.isCallExpression)(parent) &&
                    (0, eslint_etc_1.isIdentifier)(parent.callee) &&
                    parent.callee.name === 'createEffect') {
                    return true;
                }
                parent = parent.parent;
            }
            return false;
        }
        var pipeHasThisExpression = false;
        var selectorQuery = ":matches(".concat(selectSelector, ", ").concat(pipeWithSelectAndMapSelector, ")");
        return _a = {},
            _a["".concat(selectorQuery, " > CallExpression:has(ThisExpression)")] = function (node) {
                pipeHasThisExpression = true;
            },
            _a["".concat(selectorQuery, "[callee.property.name=pipe]:exit")] = function (node) {
                if (pipeHasThisExpression) {
                    pipeHasThisExpression = false;
                    return;
                }
                if (isInCreateEffect(node)) {
                    return;
                }
                var operators = node.arguments;
                var mapOperator = operators.find(function (operator) {
                    return (0, eslint_etc_1.isCallExpression)(operator) &&
                        (0, eslint_etc_1.isIdentifier)(operator.callee) &&
                        operator.callee.name === 'map';
                });
                if (mapOperator) {
                    context.report({
                        node: mapOperator,
                        messageId: exports.messageId,
                    });
                }
            },
            _a;
    },
});
//# sourceMappingURL=avoid-mapping-selectors.js.map