"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.preferOneGenericInCreateForFeatureSelectorSuggest = exports.preferOneGenericInCreateForFeatureSelector = void 0;
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
exports.preferOneGenericInCreateForFeatureSelector = 'preferOneGenericInCreateForFeatureSelector';
exports.preferOneGenericInCreateForFeatureSelectorSuggest = 'preferOneGenericInCreateForFeatureSelectorSuggest';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        hasSuggestions: true,
        ngrxModule: 'store',
        docs: {
            description: 'Prefer using a single generic to define the feature state.',
            recommended: 'warn',
            suggestion: true,
        },
        schema: [],
        messages: (_a = {},
            _a[exports.preferOneGenericInCreateForFeatureSelector] = 'Use a single generic to define the feature state.',
            _a[exports.preferOneGenericInCreateForFeatureSelectorSuggest] = 'Remove the global state generic.',
            _a),
    },
    defaultOptions: [],
    create: function (context) {
        var _a;
        var sourceCode = context.getSourceCode();
        return _a = {},
            _a["CallExpression[callee.name='createFeatureSelector'] > TSTypeParameterInstantiation[params.length>1]"] = function (node) {
                context.report({
                    node: node,
                    messageId: exports.preferOneGenericInCreateForFeatureSelector,
                    suggest: [
                        {
                            messageId: exports.preferOneGenericInCreateForFeatureSelectorSuggest,
                            fix: function (fixer) {
                                var _a;
                                var _b = __read(node.params, 1), globalState = _b[0];
                                var nextToken = sourceCode.getTokenAfter(globalState);
                                return fixer.removeRange([
                                    globalState.range[0],
                                    (_a = nextToken === null || nextToken === void 0 ? void 0 : nextToken.range[1]) !== null && _a !== void 0 ? _a : globalState.range[1] + 1,
                                ]);
                            },
                        },
                    ],
                });
            },
            _a;
    },
});
//# sourceMappingURL=prefer-one-generic-in-create-for-feature-selector.js.map