"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageId = void 0;
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
var utils_1 = require("../../utils");
exports.messageId = 'avoidDispatchingMultipleActionsSequentially';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        ngrxModule: 'store',
        docs: {
            description: 'It is recommended to only dispatch one `Action` at a time.',
            recommended: 'warn',
        },
        schema: [],
        messages: (_a = {},
            _a[exports.messageId] = 'Avoid dispatching many actions in a row to accomplish a larger conceptual "transaction".',
            _a),
    },
    defaultOptions: [],
    create: function (context) {
        var _a;
        var _b = (0, utils_1.getNgRxStores)(context).identifiers, identifiers = _b === void 0 ? [] : _b;
        var storeNames = identifiers.length > 0 ? (0, utils_1.asPattern)(identifiers) : null;
        if (!storeNames) {
            return {};
        }
        var collectedDispatches = [];
        return _a = {},
            _a["BlockStatement > ExpressionStatement > ".concat((0, utils_1.dispatchExpression)(storeNames))] = function (node) {
                collectedDispatches.push(node);
            },
            _a['BlockStatement:exit'] = function () {
                var e_1, _a;
                var withSameParent = collectedDispatches.filter(function (d1) {
                    return collectedDispatches.some(function (d2) { var _a, _b; return d2 !== d1 && ((_a = d2.parent) === null || _a === void 0 ? void 0 : _a.parent) === ((_b = d1.parent) === null || _b === void 0 ? void 0 : _b.parent); });
                });
                if (withSameParent.length > 1) {
                    try {
                        for (var withSameParent_1 = __values(withSameParent), withSameParent_1_1 = withSameParent_1.next(); !withSameParent_1_1.done; withSameParent_1_1 = withSameParent_1.next()) {
                            var node = withSameParent_1_1.value;
                            context.report({
                                node: node,
                                messageId: exports.messageId,
                            });
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (withSameParent_1_1 && !withSameParent_1_1.done && (_a = withSameParent_1.return)) _a.call(withSameParent_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                collectedDispatches.length = 0;
            },
            _a;
    },
});
//# sourceMappingURL=avoid-dispatching-multiple-actions-sequentially.js.map