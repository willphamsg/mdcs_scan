"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.useConsistentGlobalStoreNameSuggest = exports.useConsistentGlobalStoreName = void 0;
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
var utils_1 = require("../../utils");
exports.useConsistentGlobalStoreName = 'useConsistentGlobalStoreName';
exports.useConsistentGlobalStoreNameSuggest = 'useConsistentGlobalStoreNameSuggest';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        hasSuggestions: true,
        ngrxModule: 'store',
        docs: {
            description: 'Use a consistent name for the global store.',
            recommended: 'warn',
            suggestion: true,
        },
        schema: [
            {
                type: 'string',
                additionalProperties: false,
            },
        ],
        messages: (_a = {},
            _a[exports.useConsistentGlobalStoreName] = 'Global store should be named as `{{ storeName }}`.',
            _a[exports.useConsistentGlobalStoreNameSuggest] = 'Rename it to `{{ storeName }}`.',
            _a),
    },
    defaultOptions: ['store'],
    create: function (context, _a) {
        var _b = __read(_a, 1), storeName = _b[0];
        return {
            Program: function () {
                var e_1, _a;
                var _b = (0, utils_1.getNgRxStores)(context).identifiers, identifiers = _b === void 0 ? [] : _b;
                var _loop_1 = function (loc, name_1, range, typeAnnotation) {
                    if (name_1 === storeName) {
                        return { value: void 0 };
                    }
                    var data = { storeName: storeName };
                    context.report({
                        loc: __assign(__assign({}, loc), { end: __assign(__assign({}, loc.start), { column: loc.start.column + name_1.length }) }),
                        messageId: exports.useConsistentGlobalStoreName,
                        data: data,
                        suggest: [
                            {
                                messageId: exports.useConsistentGlobalStoreNameSuggest,
                                data: data,
                                fix: function (fixer) {
                                    var _a;
                                    return fixer.replaceTextRange([range[0], (_a = typeAnnotation === null || typeAnnotation === void 0 ? void 0 : typeAnnotation.range[0]) !== null && _a !== void 0 ? _a : range[1]], storeName);
                                },
                            },
                        ],
                    });
                };
                try {
                    for (var identifiers_1 = __values(identifiers), identifiers_1_1 = identifiers_1.next(); !identifiers_1_1.done; identifiers_1_1 = identifiers_1.next()) {
                        var _c = identifiers_1_1.value, loc = _c.loc, name_1 = _c.name, range = _c.range, typeAnnotation = _c.typeAnnotation;
                        var state_1 = _loop_1(loc, name_1, range, typeAnnotation);
                        if (typeof state_1 === "object")
                            return state_1.value;
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (identifiers_1_1 && !identifiers_1_1.done && (_a = identifiers_1.return)) _a.call(identifiers_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            },
        };
    },
});
//# sourceMappingURL=use-consistent-global-store-name.js.map