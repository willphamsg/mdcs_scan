"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.avoidDuplicateActionsInReducerSuggest = exports.avoidDuplicateActionsInReducer = void 0;
var path = __importStar(require("path"));
var rule_creator_1 = require("../../rule-creator");
var utils_1 = require("../../utils");
exports.avoidDuplicateActionsInReducer = 'avoidDuplicateActionsInReducer';
exports.avoidDuplicateActionsInReducerSuggest = 'avoidDuplicateActionsInReducerSuggest';
exports.default = (0, rule_creator_1.createRule)({
    name: path.parse(__filename).name,
    meta: {
        type: 'suggestion',
        hasSuggestions: true,
        ngrxModule: 'store',
        docs: {
            description: 'A `Reducer` should handle an `Action` once.',
            recommended: 'warn',
            suggestion: true,
        },
        schema: [],
        messages: (_a = {},
            _a[exports.avoidDuplicateActionsInReducer] = 'The `Reducer` handles a duplicate `Action` `{{ actionName }}`.',
            _a[exports.avoidDuplicateActionsInReducerSuggest] = 'Remove this duplication.',
            _a),
    },
    defaultOptions: [],
    create: function (context) {
        var _a;
        var sourceCode = context.getSourceCode();
        var collectedActions = new Map();
        return _a = {},
            _a["".concat(utils_1.createReducer, " > CallExpression[callee.name='on'][arguments.0.type='Identifier']")] = function (_a) {
                var _b;
                var _c = __read(_a.arguments, 1), action = _c[0];
                var actions = (_b = collectedActions.get(action.name)) !== null && _b !== void 0 ? _b : [];
                collectedActions.set(action.name, __spreadArray(__spreadArray([], __read(actions), false), [action], false));
            },
            _a["".concat(utils_1.createReducer, ":exit")] = function () {
                var e_1, _a, e_2, _b;
                try {
                    for (var collectedActions_1 = __values(collectedActions), collectedActions_1_1 = collectedActions_1.next(); !collectedActions_1_1.done; collectedActions_1_1 = collectedActions_1.next()) {
                        var _c = __read(collectedActions_1_1.value, 2), actionName = _c[0], identifiers = _c[1];
                        if (identifiers.length <= 1) {
                            break;
                        }
                        var _loop_1 = function (node) {
                            context.report({
                                node: node,
                                messageId: exports.avoidDuplicateActionsInReducer,
                                data: {
                                    actionName: actionName,
                                },
                                suggest: [
                                    {
                                        messageId: exports.avoidDuplicateActionsInReducerSuggest,
                                        fix: function (fixer) {
                                            return (0, utils_1.getNodeToCommaRemoveFix)(sourceCode, fixer, node.parent);
                                        },
                                    },
                                ],
                            });
                        };
                        try {
                            for (var identifiers_1 = (e_2 = void 0, __values(identifiers)), identifiers_1_1 = identifiers_1.next(); !identifiers_1_1.done; identifiers_1_1 = identifiers_1.next()) {
                                var node = identifiers_1_1.value;
                                _loop_1(node);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (identifiers_1_1 && !identifiers_1_1.done && (_b = identifiers_1.return)) _b.call(identifiers_1);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (collectedActions_1_1 && !collectedActions_1_1.done && (_a = collectedActions_1.return)) _a.call(collectedActions_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                collectedActions.clear();
            },
            _a;
    },
});
//# sourceMappingURL=avoid-duplicate-actions-in-reducer.js.map